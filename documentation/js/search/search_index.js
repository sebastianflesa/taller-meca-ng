var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.068,1,0.772]],["body/components/AppComponent.html",[0,0.114,1,1.367,2,1.329,3,0.554,4,0.474,5,1.173,6,1.173,7,1.173,8,0.474,9,2.864,10,1.173,11,1.517,12,1.186,13,2.368,14,1.182,15,0.602,16,1.182,17,4.896,18,1.367,19,1.182,20,4.456,21,1.329,22,4.456,23,0.33,24,0.703,25,4.896,26,0.4,27,0.045,28,0.931,29,1.173,30,1.173,31,2.69,32,4.456,33,3.635,34,0.728,35,3.51,36,0.772,37,0.474,38,3.51,39,0.554,40,3.51,41,0.554,42,0.554,43,1.173,44,1.49,45,1.49,46,1.173,47,1.721,48,1.173,49,0.602,50,1.173,51,0.931,52,1.173,53,0.826,54,1.152,55,1.173,56,0.931,57,1.173,58,0.826,59,1.173,60,0.931,61,1.173,62,0.931,63,1.047,64,1.173,65,1.173,66,0.931,67,1.173,68,1.173,69,1.173,70,0.034,71,0.034]],["title/guards/AuthGuard.html",[72,1.546,73,2.021]],["body/guards/AuthGuard.html",[3,0.57,4,0.489,8,0.489,13,1.921,15,0.489,23,0.339,26,0.412,27,0.045,34,0.942,36,0.783,37,0.489,39,0.57,41,0.57,42,0.57,49,0.489,70,0.034,71,0.034,72,2.413,73,3.153,74,2.511,75,2.949,76,0.825,77,4.54,78,4.54,79,4.54,80,4.54,81,4.54,82,1.068,83,4.465,84,0.75,85,1.703,86,1.632,87,1.153,88,3.616,89,0.851,90,0.851,91,3.616,92,2.741,93,0.946,94,3.704,95,3.704,96,3.704,97,1.905,98,2.139,99,2.741,100,3.153,101,0.716,102,2.766,103,1.517,104,1.905,105,2.183,106,1.078,107,0.959,108,0.75,109,2.183,110,2.139,111,1.921,112,2.183]],["title/guards/AuthLoginGuard.html",[72,1.546,113,2.021]],["body/guards/AuthLoginGuard.html",[3,0.552,4,0.473,8,0.473,13,1.859,15,0.473,23,0.328,26,0.507,27,0.045,34,0.923,36,0.771,37,0.473,39,0.552,41,0.552,42,0.552,49,0.601,70,0.034,71,0.034,72,2.363,74,2.429,76,0.808,82,1.046,83,4.332,84,0.726,85,1.648,86,1.618,87,1.144,89,1.046,90,1.046,92,2.685,93,0.935,94,3.627,95,3.627,96,3.627,97,1.865,98,2.095,99,2.685,100,3.088,101,0.701,102,2.733,103,1.468,104,1.865,105,2.112,106,1.043,107,0.928,108,0.726,109,2.112,110,2.095,112,2.112,113,3.088,114,3.988,115,2.854,116,0.923,117,3.498,118,3.498,119,5.144,120,5.144,121,5.144,122,3.498,123,2.597,124,2.685,125,1.31]],["title/injectables/AuthService.html",[86,0.868,104,1.221]],["body/injectables/AuthService.html",[3,0.27,4,0.231,8,0.231,13,0.91,15,0.624,23,0.309,24,0.422,26,0.526,27,0.046,28,1.313,29,1.1,30,1.1,34,1.07,36,0.422,37,0.231,39,0.27,41,0.27,42,0.27,49,0.679,63,0.797,70,0.02,71,0.02,76,0.486,82,0.629,84,0.355,86,0.797,87,0.887,89,0.949,90,0.949,92,3.035,93,0.882,97,1.56,98,2.477,99,2.581,100,1.857,101,0.842,102,2.523,104,1.122,105,1.034,107,0.454,108,0.985,110,2.429,111,0.91,112,2.435,116,1.091,124,2.435,126,1.189,127,1.397,128,2.181,129,0.987,130,2.674,131,1.274,132,4.1,133,4.274,134,3.29,135,3.29,136,3.718,137,3.718,138,3.718,139,3.718,140,3.033,141,3.033,142,2.674,143,2.674,144,2.674,145,1.712,146,1.712,147,1.712,148,2.163,149,2.968,150,2.674,151,1.712,152,2.674,153,1.56,154,1.712,155,2.582,156,1.712,157,1.857,158,1.712,159,2.674,160,3.29,161,3.033,162,2.674,163,2.987,164,1.712,165,2.181,166,2.582,167,1.274,168,2.867,169,1.712,170,2.674,171,0.927,172,2.674,173,1.712,174,1.421,175,2.674,176,1.712,177,2.674,178,2.181,179,2.181,180,2.674,181,1.712,182,2.181,183,2.684,184,4.25,185,4.855,186,1.712,187,1.712,188,1.712,189,3.29,190,1.397,191,1.712,192,3.29,193,3.29,194,3.29,195,3.29,196,3.29,197,3.29,198,3.29,199,2.284,200,1.712,201,2.181,202,1.712,203,3.29,204,1.712,205,1.712,206,1.712,207,1.712,208,1.712,209,1.712,210,1.712,211,1.712,212,3.29,213,1.748,214,3.29,215,2.284,216,1.712,217,1.712,218,1.712,219,2.674,220,1.712,221,3.718,222,1.712,223,1.397,224,1.001,225,1.397,226,1.397,227,1.397,228,1.189,229,1.397,230,1.397,231,1.189,232,3.29,233,1.712,234,3.718,235,2.674,236,1.712,237,2.674,238,1.397,239,1.712,240,1.712,241,1.712,242,1.712,243,1.712,244,3.29,245,0.807,246,2.674,247,2.674,248,2.181,249,1.122,250,0.807,251,1.712,252,1.397,253,0.807,254,1.712]],["title/components/InventarioComponent.html",[0,0.068,51,0.772]],["body/components/InventarioComponent.html",[0,0.08,1,0.488,2,0.843,3,0.29,4,0.249,5,0.615,6,0.615,7,0.615,8,0.249,10,0.615,11,1.337,12,1.046,14,0.75,15,0.382,16,0.75,18,0.488,19,0.75,21,0.843,23,0.173,24,0.446,26,0.522,27,0.045,29,0.615,30,0.615,31,2.333,34,1.046,36,0.657,37,0.249,39,0.29,41,0.29,42,0.29,43,0.615,44,0.945,45,0.945,46,0.615,47,1.291,48,0.615,49,0.639,50,0.615,51,1.025,52,0.615,53,0.433,54,1.332,55,0.615,56,0.488,57,0.615,58,0.433,59,0.615,60,0.488,61,0.615,62,0.488,63,0.549,64,0.615,65,0.615,66,0.488,67,0.615,68,0.615,69,0.615,70,0.021,71,0.021,76,0.8,82,0.665,84,0.382,86,1.367,87,0.951,89,0.909,90,0.909,93,0.833,101,0.816,103,0.772,106,0.843,107,0.488,108,0.587,116,1.122,124,2.078,125,0.689,129,1.255,131,1.243,148,1.186,149,1.963,153,2.172,167,1.544,171,1.074,231,1.963,249,2.035,255,1.501,256,1.312,257,3.443,258,1.152,259,2.827,260,2.827,261,1.289,262,1.026,263,2.827,264,2.827,265,2.808,266,3.443,267,3.863,268,2.827,269,2.827,270,2.827,271,3.863,272,1.291,273,3.863,274,1.501,275,1.471,276,1.84,277,1.84,278,2.217,279,2.306,280,4.27,281,1.216,282,2.827,283,2.114,284,1.84,285,3.443,286,2.827,287,1.84,288,4.731,289,4.731,290,1.581,291,2.391,292,2.827,293,1.84,294,2.391,295,1.84,296,3.863,297,2.683,298,1.84,299,0.843,300,0.945,301,1.84,302,1.84,303,1.84,304,2.827,305,2.827,306,1.186,307,3.152,308,1.186,309,2.306,310,1.186,311,2.827,312,2.306,313,2.827,314,1.84,315,1.84,316,0.488,317,0.867,318,1.84,319,1.84,320,1.84,321,1.84,322,0.978,323,1.502,324,1.84,325,2.306,326,1.829,327,0.978,328,1.84,329,1.84,330,1.84,331,1.84,332,1.84,333,1.278,334,1.84,335,1.84,336,1.84,337,1.501,338,1.84,339,1.84,340,1.84,341,1.84,342,1.84,343,1.84,344,1.84,345,2.827,346,2.306,347,1.186,348,1.963,349,1.502,350,1.963,351,1.963,352,2.827,353,2.306,354,2.827,355,2.827,356,2.827,357,2.827,358,2.827]],["title/components/InventarioEditarComponent.html",[0,0.068,53,0.685]],["body/components/InventarioEditarComponent.html",[0,0.088,1,0.574,2,0.952,3,0.341,4,0.292,5,0.723,6,0.723,7,0.723,8,0.292,10,0.723,11,1.389,12,1.086,14,0.847,15,0.431,16,0.847,18,0.574,19,0.847,21,0.952,23,0.203,24,0.503,26,0.432,27,0.045,28,1.112,34,0.928,36,0.705,37,0.292,39,0.341,41,0.341,42,0.341,43,0.723,44,1.067,45,1.067,46,0.723,47,1.401,48,0.723,49,0.566,50,0.723,51,0.574,52,0.723,53,0.986,54,1.246,55,0.723,56,0.574,57,0.723,58,0.509,59,0.723,60,0.574,61,0.723,62,0.574,63,0.645,64,0.723,65,0.723,66,0.574,67,0.723,68,0.723,69,0.723,70,0.024,71,0.024,76,0.58,82,0.751,84,0.662,87,1.004,89,0.509,90,0.509,93,0.972,97,0.907,101,0.661,106,0.952,108,0.788,116,0.87,123,1.696,125,1.674,129,1.389,131,1.25,153,0.907,167,1.132,171,0.928,174,1.696,213,1.149,224,0.809,245,1.504,249,1.758,250,1.019,253,1.504,256,1.132,258,1.25,261,1.421,262,1.132,272,1.401,275,1.618,278,1.758,281,1.186,283,1.758,290,0.723,291,2.636,297,2.217,299,1.25,300,1.067,306,0.907,308,0.907,310,0.907,316,0.574,317,1.019,322,1.149,323,2.017,326,2.017,327,1.149,347,1.963,348,2.91,349,2.486,350,3.249,351,3.249,359,2.205,360,3.249,361,1.501,362,1.421,363,2.604,364,2.604,365,2.376,366,1.975,367,1.764,368,2.531,369,2.162,370,2.162,371,2.162,372,1.195,373,1.195,374,2.162,375,1.569,376,2.162,377,1.305,378,0.723,379,0.809,380,1.927,381,1.305,382,1.305,383,1.927,384,2.604,385,2.604,386,2.604,387,2.636,388,1.696,389,1.305,390,1.927,391,1.305,392,1.764,393,1.764,394,1.501,395,1.764,396,1.764,397,1.764,398,2.604,399,2.604,400,2.431,401,2.227,402,2.227,403,1.975,404,2.227,405,1.927,406,1.975,407,2.604,408,2.486,409,2.227,410,2.91,411,2.217,412,2.217,413,2.217,414,2.604,415,2.217,416,1.696]],["title/interfaces/InventarioItem.html",[375,1.089,379,1.089]],["body/interfaces/InventarioItem.html",[0,0.091,3,0.457,4,0.391,8,0.391,11,0.768,12,0.601,14,0.768,15,0.391,16,0.768,19,0.768,21,0.863,23,0.272,24,0.619,26,0.587,27,0.046,28,1.482,36,0.788,37,0.391,39,0.457,41,0.457,42,0.457,49,0.646,53,0.681,54,1.175,70,0.03,71,0.03,76,0.936,84,0.601,87,0.925,93,0.81,97,1.215,101,0.619,106,0.863,108,0.925,116,0.815,123,1.538,125,1.87,129,0.768,153,1.647,167,1.171,171,0.925,213,1.538,224,1.084,249,2.095,250,1.364,253,1.85,256,1.329,258,1.171,261,1.47,262,1.171,272,0.968,275,1.489,278,1.647,281,1.182,283,2.21,290,1.313,291,3.094,299,1.171,300,0.968,306,2.004,308,2.004,310,2.004,316,0.768,317,1.364,322,1.538,323,2.368,326,2.368,327,1.538,359,1.364,360,2.01,361,2.01,362,1.47,363,2.362,364,2.362,365,2.539,366,1.364,368,2.371,372,1.084,373,1.084,375,1.789,377,1.748,378,0.968,379,1.084,380,2.371,381,1.748,382,1.748,383,2.371,384,3.203,385,3.203,386,3.203,387,2.01,388,2.087,389,1.748,390,2.371,391,1.748,392,2.362,393,2.362,394,2.01,395,2.362,396,2.362,397,2.362,417,2.01]],["title/interfaces/InventarioItem-1.html",[245,1.152,375,0.916,379,0.916]],["body/interfaces/InventarioItem-1.html",[0,0.092,3,0.459,4,0.393,8,0.393,11,0.773,12,0.604,14,0.773,15,0.393,16,0.773,19,0.773,21,0.868,23,0.273,24,0.622,26,0.588,27,0.046,28,1.483,36,0.789,37,0.393,39,0.459,41,0.459,42,0.459,49,0.647,54,1.177,58,0.685,70,0.03,71,0.03,76,0.975,87,0.927,93,0.87,101,0.622,106,0.868,107,0.773,108,0.818,116,0.818,123,1.547,125,1.793,153,1.875,167,1.175,171,0.927,213,1.547,224,1.09,249,2.164,250,1.372,253,1.372,256,1.332,258,1.332,261,1.476,262,1.175,272,0.973,275,1.494,278,1.654,281,1.186,283,2.164,290,1.318,294,2.737,299,1.175,300,0.973,306,2.009,308,2.099,310,2.009,316,0.773,317,1.372,322,1.547,323,2.545,326,2.375,327,1.547,359,1.372,362,1.476,365,2.659,366,1.372,368,2.38,372,1.09,373,1.09,375,1.673,377,1.758,378,0.973,379,1.09,380,2.38,381,1.758,382,1.758,383,1.758,388,1.547,389,1.758,390,1.758,391,1.758,417,2.022,418,2.022,419,2.022,420,3.216,421,2.375,422,2.375,423,2.375,424,2.375,425,3.645,426,2.375,427,2.375,428,2.375,429,2.375,430,2.375,431,2.375]],["title/components/InventarioNuevoComponent.html",[0,0.068,56,0.772]],["body/components/InventarioNuevoComponent.html",[0,0.086,1,0.546,2,0.918,3,0.324,4,0.278,5,0.688,6,0.688,7,0.688,8,0.278,10,0.688,11,1.373,12,1.074,14,0.817,15,0.416,16,0.817,18,0.546,19,0.817,23,0.193,24,0.485,26,0.543,27,0.045,28,1.219,29,1.464,30,1.464,34,1.039,36,0.691,37,0.278,39,0.324,41,0.324,42,0.324,43,0.688,44,1.029,45,1.029,46,0.688,47,1.367,48,0.688,49,0.644,50,0.688,51,0.546,52,0.688,53,0.484,54,1.259,55,0.688,56,1.162,57,0.688,58,0.484,59,0.688,60,0.546,61,0.688,62,0.546,63,0.614,64,0.688,65,0.688,66,0.546,67,0.688,68,0.688,69,0.688,70,0.023,71,0.023,76,0.835,82,0.724,84,0.427,87,0.988,89,0.484,90,0.484,93,0.972,101,0.645,106,0.918,107,0.546,116,0.849,125,0.77,129,1.353,131,1.22,155,1.429,167,1.22,171,0.909,174,1.635,215,3.401,245,1.45,256,1.22,258,1.22,261,1.38,262,1.099,265,3.007,272,1.367,274,1.679,275,1.464,278,1.716,281,1.086,283,1.716,290,1.029,297,3.191,299,1.22,300,1.029,306,1.716,308,1.716,310,1.716,316,0.546,317,0.969,337,1.679,347,1.928,348,3.191,349,2.442,350,3.191,351,3.191,359,2.402,362,1.38,365,1.635,366,1.927,372,1.152,373,1.152,378,0.688,387,2.137,388,1.093,394,2.137,398,3.337,399,2.51,400,2.402,401,2.174,402,2.174,403,1.927,404,2.174,405,1.858,406,1.927,407,2.51,408,2.442,409,2.174,410,2.841,411,2.137,412,2.137,413,2.137,414,2.51,415,2.137,416,1.635,432,2.058,433,4.159,434,1.679,435,3.686,436,3.686,437,3.077,438,3.077,439,2.058,440,2.058,441,2.058,442,2.058,443,2.058,444,2.058,445,2.058,446,2.058,447,2.058,448,2.058,449,2.058,450,3.077,451,3.077,452,3.077,453,3.077,454,3.077,455,3.077,456,2.058,457,3.077,458,2.058,459,1.679,460,1.679,461,1.679,462,3.077]],["title/injectables/InventarioService.html",[104,1.221,275,0.973]],["body/injectables/InventarioService.html",[3,0.252,4,0.216,8,0.216,13,0.85,15,0.216,23,0.366,24,0.4,26,0.496,27,0.046,28,1.155,29,1.052,30,1.052,31,2.507,34,1.041,36,0.4,37,0.216,41,0.252,42,0.252,49,0.694,54,1.295,70,0.019,71,0.019,76,0.883,82,0.596,84,0.653,89,0.977,90,0.977,93,0.82,97,1.063,99,2.507,101,0.832,102,1.673,104,1.063,105,0.966,108,0.964,110,1.839,112,0.966,116,1.11,124,2.627,126,1.111,128,2.068,129,0.673,131,1.346,140,2.922,148,1.063,149,2.487,153,2.131,157,1.76,160,2.068,161,3.388,167,1.419,171,1.025,178,2.922,179,2.068,189,3.55,190,2.068,223,1.305,224,1.629,225,1.305,226,1.305,227,1.305,228,1.111,229,1.305,230,1.305,231,1.111,238,2.922,245,2.05,248,2.068,249,2.269,253,1.194,275,0.847,278,2.176,279,2.068,280,3.884,281,0.673,283,2.038,306,1.95,307,2.922,308,2.131,310,1.95,312,3.388,325,1.305,346,2.922,349,1.347,353,2.922,375,1.179,379,0.599,405,1.53,463,1.305,464,2.535,465,3.148,466,2.535,467,2.535,468,3.581,469,2.535,470,3.581,471,2.535,472,2.535,473,2.535,474,1.6,475,2.535,476,1.6,477,2.535,478,2.535,479,1.6,480,2.535,481,1.6,482,2.535,483,1.6,484,1.6,485,1.6,486,2.535,487,2.535,488,1.6,489,2.535,490,2.535,491,1.6,492,3.581,493,3.148,494,2.535,495,1.6,496,2.535,497,3.581,498,2.535,499,2.535,500,2.535,501,2.068,502,2.535,503,2.535,504,2.068,505,2.535,506,2.535,507,2.068,508,2.535,509,2.535,510,2.535,511,2.535,512,2.535,513,2.535,514,2.535,515,2.535,516,2.535,517,2.535,518,2.535,519,2.535,520,1.6,521,2.535,522,1.6,523,1.76,524,3.148,525,1.6,526,1.305,527,1.6,528,2.535,529,1.6,530,4.153,531,1.6,532,1.6,533,3.904,534,1.6,535,4.761,536,3.581,537,3.148,538,1.6,539,1.305,540,1.6,541,1.6,542,1.6,543,1.6,544,1.6,545,3.581,546,3.148,547,1.6,548,2.535,549,2.535,550,2.535,551,2.535,552,1.6,553,1.6,554,1.6,555,1.6,556,1.6]],["title/components/InventarioUtilizarComponent.html",[0,0.068,58,0.685]],["body/components/InventarioUtilizarComponent.html",[0,0.09,1,0.596,2,0.979,3,0.354,4,0.303,5,0.75,6,0.75,7,0.75,8,0.303,10,0.75,11,1.4,12,1.095,14,0.871,15,0.444,16,0.871,18,0.596,19,0.871,21,0.979,23,0.211,24,0.518,26,0.517,27,0.045,28,1.132,34,1.016,36,0.716,37,0.303,39,0.354,41,0.354,42,0.354,43,0.75,44,1.097,45,1.097,46,0.75,47,1.427,48,0.75,49,0.577,50,0.75,51,0.596,52,0.75,53,0.528,54,1.255,55,0.75,56,0.596,57,0.75,58,1.004,59,0.75,60,0.596,61,0.75,62,0.596,63,0.669,64,0.75,65,0.75,66,0.596,67,0.75,68,0.75,69,0.75,70,0.025,71,0.025,76,0.825,82,0.772,84,0.466,87,1.016,89,0.528,90,0.528,93,0.946,101,0.673,106,0.979,107,0.596,108,0.681,116,0.886,123,1.744,125,1.598,129,1.258,131,1.272,153,1.377,167,0.669,171,0.942,182,2.677,213,1.193,224,0.84,245,1.546,249,1.905,250,1.058,253,1.058,256,1.157,258,1.354,261,1.452,262,1.157,272,1.427,275,1.637,278,1.79,281,1.205,283,1.377,290,0.75,294,2.694,299,1.272,300,1.097,306,0.942,308,1.79,310,0.942,316,0.596,317,1.058,322,1.193,323,2.268,326,2.061,327,1.193,347,1.99,349,2.669,359,2.366,362,1.452,365,2.52,366,2.011,367,1.831,368,2.577,372,1.229,373,1.229,375,1.229,377,1.355,378,0.75,379,0.84,380,1.982,381,1.355,382,1.355,383,1.355,388,1.193,389,1.355,390,1.355,391,1.355,400,2.011,401,1.744,402,1.744,403,1.546,404,1.744,406,1.546,408,1.744,409,2.268,410,2.963,411,2.963,412,2.963,413,2.963,416,1.744,418,3.487,419,1.559,420,1.831,421,2.677,422,2.677,423,3.704,424,1.831,425,3.165,426,1.831,427,1.831,428,1.831,429,1.831,430,1.831,431,1.831,557,3.282,558,2.245,559,2.245,560,2.245,561,2.245,562,2.245,563,3.282,564,4.268]],["title/components/LoginComponent.html",[0,0.068,60,0.772]],["body/components/LoginComponent.html",[0,0.091,1,0.598,2,0.982,3,0.356,4,0.305,5,0.754,6,0.754,7,0.754,8,0.305,10,0.754,11,1.401,12,1.096,14,0.874,15,0.445,16,0.874,18,0.598,19,0.874,21,0.982,23,0.212,24,0.519,26,0.518,27,0.045,28,1.135,29,1.101,30,1.101,34,1.043,36,0.773,37,0.305,39,0.519,41,0.356,42,0.356,43,0.754,44,1.101,45,1.101,46,0.754,47,1.429,48,0.754,49,0.526,50,0.754,51,0.598,52,0.754,53,0.531,54,1.07,55,0.754,56,0.598,57,0.754,58,0.531,59,0.754,60,1.135,61,0.754,62,0.598,63,1.16,64,0.754,65,0.754,66,0.598,67,0.754,68,0.754,69,0.754,70,0.025,71,0.025,76,0.598,82,0.775,84,0.468,85,1.062,86,1.416,87,1.018,89,0.531,90,0.531,92,1.988,93,0.947,98,2.369,101,0.674,103,0.946,107,0.598,108,0.683,109,1.361,110,1.062,116,0.986,125,1.456,129,1.135,131,1.592,148,1.794,155,1.566,163,2.582,165,2.686,166,2.97,167,0.982,168,2.582,171,0.944,184,1.839,201,1.839,224,0.844,256,1.275,258,1.275,262,0.982,272,1.429,281,1.383,299,1.275,300,1.429,316,0.598,333,2.286,347,1.993,362,0.844,366,2.015,372,1.233,373,1.233,378,1.101,400,2.015,403,2.015,406,2.015,409,2.273,459,1.839,460,1.839,461,1.839,507,2.686,565,1.839,566,2.686,567,3.173,568,3.292,569,3.292,570,3.889,571,3.875,572,3.292,573,3.889,574,3.173,575,3.173,576,3.292,577,2.255,578,2.255,579,2.686,580,2.255,581,2.255,582,2.255,583,2.255,584,2.255,585,1.839,586,2.255,587,1.839,588,2.255,589,1.839,590,2.686,591,2.255,592,2.255,593,2.255,594,2.255,595,2.255,596,2.255,597,1.839,598,2.255,599,2.255,600,2.255,601,2.255,602,3.292,603,2.686,604,3.292,605,3.292,606,4.277,607,3.298,608,3.292,609,3.292,610,2.686]],["title/components/LoginRegistroComponent.html",[0,0.068,62,0.772]],["body/components/LoginRegistroComponent.html",[0,0.088,1,0.568,2,0.945,3,0.337,4,0.289,5,0.715,6,0.715,7,0.715,8,0.289,10,0.715,11,1.385,12,1.083,14,0.841,15,0.51,16,0.841,18,0.568,19,0.841,21,0.945,23,0.201,24,0.5,26,0.576,27,0.045,28,0.841,29,0.715,30,0.715,34,1.068,36,0.735,37,0.289,39,0.337,41,0.337,42,0.337,43,0.715,44,1.059,45,1.059,46,0.715,47,1.394,48,0.715,49,0.564,50,0.715,51,0.568,52,0.715,53,0.503,54,0.888,55,0.715,56,0.568,57,0.715,58,0.503,59,0.715,60,0.568,61,0.715,62,1.106,63,1.438,64,0.715,65,0.715,66,0.568,67,1.394,68,0.715,69,0.715,70,0.024,71,0.024,76,0.576,82,0.745,84,0.444,85,1.008,86,1.39,87,0.967,89,0.745,90,0.745,93,0.935,97,1.329,98,2.196,101,0.658,102,1.137,103,0.898,107,0.568,108,0.444,110,1.008,111,1.137,116,0.657,129,1.106,131,1.535,132,2.584,148,1.749,157,2.2,163,2.913,167,0.945,168,2.688,171,0.783,174,1.683,199,3.626,215,1.486,224,1.186,256,0.945,258,0.945,261,0.801,262,0.945,281,0.841,290,1.059,299,0.945,316,0.568,347,2.122,362,0.801,372,1.186,373,1.186,378,1.059,400,2.196,401,2.216,402,1.683,403,1.492,404,1.683,406,1.492,408,1.683,409,2.216,415,2.2,416,1.683,566,2.584,574,3.077,575,3.402,579,3.803,585,2.584,587,1.745,589,1.745,590,3.402,603,2.584,607,3.44,610,3.803,611,4.259,612,4.259,613,1.745,614,4.17,615,3.168,616,3.168,617,3.077,618,3.772,619,3.168,620,3.168,621,3.168,622,2.139,623,4.17,624,3.631,625,3.631,626,2.139,627,3.168,628,2.139,629,2.139,630,2.139,631,2.139,632,2.139,633,2.139,634,2.139,635,2.139,636,2.139,637,2.139,638,2.139,639,3.772,640,2.139,641,2.139,642,2.139,643,2.139,644,2.139,645,1.745,646,1.745,647,1.745,648,2.139,649,2.139,650,2.139,651,1.745,652,3.168,653,3.168,654,3.168,655,3.402]],["title/components/NavbarComponent.html",[0,0.068,18,0.772]],["body/components/NavbarComponent.html",[0,0.103,1,0.755,2,1.157,3,0.449,4,0.385,5,0.952,6,0.952,7,0.952,8,0.385,10,0.952,11,1.466,12,1.147,14,1.03,15,0.525,16,1.03,18,1.259,19,1.03,21,1.157,23,0.267,24,0.612,26,0.442,27,0.045,31,2.344,34,0.985,36,0.783,37,0.385,39,0.612,41,0.449,42,0.449,43,0.952,44,1.298,45,1.298,46,0.952,47,1.586,48,0.952,49,0.597,50,0.952,51,0.755,52,0.952,53,0.67,54,1.168,55,0.952,56,0.755,57,0.952,58,0.67,59,0.952,60,0.755,61,0.952,62,0.755,63,0.849,64,0.952,65,0.952,66,0.755,67,1.477,68,0.952,69,0.952,70,0.029,71,0.029,76,0.706,82,0.913,84,0.591,85,1.341,86,1.528,87,1.088,89,0.67,90,0.67,93,0.706,101,0.748,103,1.194,107,0.755,108,0.591,111,1.513,116,0.985,129,1.03,131,1.157,141,3.87,148,1.99,166,2.696,171,0.985,252,2.322,256,1.415,258,1.415,262,1.317,272,1.586,281,1.259,290,1.298,299,1.415,300,1.298,316,0.755,333,3.067,567,3.604,571,4.05,597,3.167,656,2.322,657,3.882,658,3.882,659,3.882,660,3.882,661,3.882,662,2.847,663,2.847,664,3.882,665,2.847,666,2.847,667,2.847,668,3.882,669,3.167,670,3.882]],["title/components/PerfilComponent.html",[0,0.068,66,0.772]],["body/components/PerfilComponent.html",[0,0.092,1,0.616,2,1.003,3,0.366,4,0.314,5,0.776,6,0.776,7,0.776,8,0.314,10,0.776,11,1.41,12,1.103,14,0.892,15,0.454,16,0.892,18,0.616,19,0.892,21,1.003,23,0.218,24,0.53,26,0.547,27,0.045,28,1.15,29,1.124,30,1.124,34,1.052,36,0.726,37,0.314,39,0.366,41,0.366,42,0.366,43,0.776,44,1.124,45,1.124,46,0.776,47,1.449,48,0.776,49,0.534,50,0.776,51,0.616,52,0.776,53,0.546,54,0.93,55,0.776,56,0.616,57,0.776,58,0.546,59,0.776,60,0.616,61,0.776,62,0.616,63,0.692,64,0.776,65,0.776,66,1.15,67,1.727,68,0.776,69,0.776,70,0.026,71,0.026,76,0.611,82,0.791,84,0.482,85,1.094,86,1.431,87,1.027,89,0.546,90,0.546,93,0.993,98,2.388,101,0.684,103,0.974,106,1.003,107,0.616,108,0.482,109,1.401,111,1.787,116,0.9,129,1.15,131,1.629,148,1.819,163,2.618,168,2.618,171,0.955,174,1.787,183,1.894,199,3.643,250,1.094,256,1.293,258,1.293,261,1.48,262,1.003,272,1.449,281,1.15,290,1.124,299,1.293,300,1.124,316,0.616,347,2.013,362,1.259,372,1.259,373,1.259,378,0.776,400,2.388,401,2.304,402,2.304,403,2.043,404,2.304,405,2.03,406,2.043,408,2.304,416,1.787,607,3.52,617,3.226,624,1.894,625,1.894,645,2.743,646,2.743,647,2.743,651,1.894,655,2.743,669,2.743,671,1.894,672,3.363,673,3.363,674,3.954,675,4.335,676,3.363,677,2.321,678,2.321,679,2.321,680,2.321,681,2.321,682,2.321,683,2.321,684,2.321,685,2.321,686,2.321,687,2.321,688,2.321,689,2.321,690,2.321,691,2.321,692,3.363,693,3.363,694,3.363]],["title/coverage.html",[695,3.214]],["body/coverage.html",[0,0.131,1,0.92,8,0.469,9,2.83,12,0.72,18,0.92,26,0.395,27,0.045,51,0.92,53,0.816,56,0.92,58,0.816,60,0.92,62,0.92,66,0.92,70,0.034,71,0.034,72,2.35,73,2.409,75,2.83,86,1.034,104,1.855,113,2.409,114,2.83,115,2.83,127,2.83,255,2.83,275,1.159,309,2.83,359,2.495,360,3.071,361,3.071,375,1.656,379,1.656,418,3.071,419,3.071,433,2.83,434,2.83,463,2.83,504,2.83,523,2.409,539,4.489,565,2.83,611,2.83,612,2.83,613,2.83,656,2.83,671,2.83,695,2.83,696,3.469,697,3.469,698,3.469,699,3.608,700,4.423,701,5.415,702,2.409,703,3.469,704,3.608,705,5.127,706,2.83,707,2.83,708,2.83,709,2.83,710,4.869,711,3.469,712,4.423,713,3.469,714,3.469,715,3.469,716,3.469,717,4.423,718,4.423,719,3.469,720,3.469,721,3.469,722,3.469,723,3.469,724,3.469,725,3.469,726,3.469,727,3.469,728,3.469,729,3.469,730,3.469,731,2.83,732,2.409,733,3.469,734,3.469]],["title/dependencies.html",[735,1.698,736,2.848]],["body/dependencies.html",[27,0.045,37,0.559,39,0.652,70,0.037,71,0.037,316,1.097,378,1.382,526,3.372,732,2.87,736,3.372,737,4.134,738,5.794,739,4.134,740,5.265,741,4.928,742,4.134,743,3.372,744,4.134,745,3.372,746,4.134,747,4.134,748,4.134,749,4.134,750,4.134,751,4.134,752,4.134,753,4.134,754,4.134,755,4.134]],["title/miscellaneous/functions.html",[756,1.477,757,2.848]],["body/miscellaneous/functions.html",[12,1.126,23,0.418,27,0.042,70,0.039,71,0.039,101,0.811,171,0.923,699,4.428,702,3.769,756,2.685,757,3.628,758,4.448]],["title/index.html",[23,0.23,759,2.446,760,2.446]],["body/index.html",[0,0.118,4,0.508,27,0.035,33,4.57,49,0.508,70,0.035,71,0.035,106,1.122,228,2.612,523,2.612,702,3.767,735,2.612,743,3.796,745,3.069,761,3.762,762,4.654,763,3.762,764,5.053,765,5.053,766,3.069,767,3.762,768,3.762,769,3.762,770,3.762,771,3.762,772,3.762,773,3.762,774,3.762,775,3.762,776,3.762,777,3.762,778,3.762,779,5.053,780,5.053,781,3.762,782,5.279,783,3.762,784,3.762,785,3.762,786,3.762,787,4.654,788,4.654,789,5.279,790,4.654,791,4.654,792,3.762,793,5.527,794,3.762,795,3.762,796,3.762,797,4.654,798,3.762,799,3.762,800,3.762,801,3.762,802,3.762,803,3.762,804,5.053,805,3.762,806,3.762,807,3.762,808,3.762,809,2.612,810,3.762,811,3.762]],["title/modules.html",[812,3.214]],["body/modules.html",[27,0.04,70,0.04,71,0.04,812,3.767]],["title/overview.html",[809,2.736]],["body/overview.html",[2,1.353,27,0.04,70,0.04,71,0.04,74,3.15,126,3.15,417,3.15,501,4.463,809,3.15,813,4.536]],["title/properties.html",[24,0.551,735,1.698]],["body/properties.html",[24,0.723,27,0.042,70,0.04,71,0.04,766,3.742,814,4.587]],["title/miscellaneous/variables.html",[756,1.477,815,2.848]],["body/miscellaneous/variables.html",[15,0.554,23,0.385,26,0.559,27,0.045,29,1.817,30,1.817,70,0.037,71,0.037,704,3.345,706,4.28,707,4.28,708,3.345,709,4.001,731,3.345,732,3.405,756,2.476,815,3.345,816,4.1,817,4.1,818,4.904,819,4.904,820,4.904,821,4.1,822,4.1,823,4.1,824,4.1,825,4.1,826,4.1,827,4.1]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":539,"title":{},"body":{"injectables/InventarioService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":814,"title":{},"body":{"properties.html":{}}}],["0.14.10",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":701,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":245,"title":{"interfaces/InventarioItem-1.html":{}},"body":{"injectables/AuthService.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{}}}],["1/3",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["10/14",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":509,"title":{},"body":{"injectables/InventarioService.html":{}}}],["10000",{"_index":498,"title":{},"body":{"injectables/InventarioService.html":{}}}],["11/15",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":416,"title":{},"body":{"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["15000",{"_index":510,"title":{},"body":{"injectables/InventarioService.html":{}}}],["18.2.0",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["18.2.11",{"_index":745,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["2",{"_index":501,"title":{},"body":{"injectables/InventarioService.html":{},"overview.html":{}}}],["2.11.8",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["20000",{"_index":505,"title":{},"body":{"injectables/InventarioService.html":{}}}],["25",{"_index":309,"title":{},"body":{"components/InventarioComponent.html":{},"coverage.html":{}}}],["27",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":507,"title":{},"body":{"injectables/InventarioService.html":{},"components/LoginComponent.html":{}}}],["3/10",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["3/11",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":504,"title":{},"body":{"injectables/InventarioService.html":{},"coverage.html":{}}}],["33",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":514,"title":{},"body":{"injectables/InventarioService.html":{}}}],["4.18.2",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["45",{"_index":517,"title":{},"body":{"injectables/InventarioService.html":{}}}],["5.3.3",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":405,"title":{},"body":{"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/PerfilComponent.html":{}}}],["500",{"_index":518,"title":{},"body":{"injectables/InventarioService.html":{}}}],["5w30",{"_index":513,"title":{},"body":{"injectables/InventarioService.html":{}}}],["6",{"_index":609,"title":{},"body":{"components/LoginComponent.html":{}}}],["60",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["8/12",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["8000",{"_index":311,"title":{},"body":{"components/InventarioComponent.html":{}}}],["9",{"_index":813,"title":{},"body":{"overview.html":{}}}],["__test__",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InventarioService.html":{}}}],["acceder",{"_index":602,"title":{},"body":{"components/LoginComponent.html":{}}}],["acceso",{"_index":94,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{}}}],["access",{"_index":78,"title":{},"body":{"guards/AuthGuard.html":{}}}],["accessors",{"_index":572,"title":{},"body":{"components/LoginComponent.html":{}}}],["acciones",{"_index":352,"title":{},"body":{"components/InventarioComponent.html":{}}}],["aceite",{"_index":497,"title":{},"body":{"injectables/InventarioService.html":{}}}],["activatedroute",{"_index":368,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["activatedroutesnapshot",{"_index":119,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["actual_component",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["actualiza",{"_index":492,"title":{},"body":{"injectables/InventarioService.html":{}}}],["actualizado",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{},"components/PerfilComponent.html":{}}}],["actualizar",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"components/InventarioUtilizarComponent.html":{}}}],["add",{"_index":800,"title":{},"body":{"index.html":{}}}],["additemtoinventario",{"_index":466,"title":{},"body":{"injectables/InventarioService.html":{}}}],["additemtoinventario(newitem",{"_index":475,"title":{},"body":{"injectables/InventarioService.html":{}}}],["admin",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["admin@taller.com",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["agrega",{"_index":279,"title":{},"body":{"components/InventarioComponent.html":{},"injectables/InventarioService.html":{}}}],["agregado",{"_index":457,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["agregar",{"_index":296,"title":{},"body":{"components/InventarioComponent.html":{}}}],["al",{"_index":281,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["alert('credenciales",{"_index":598,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert('las",{"_index":651,"title":{},"body":{"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["alert('perfil",{"_index":686,"title":{},"body":{"components/PerfilComponent.html":{}}}],["alert('producto",{"_index":456,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["alert('stock",{"_index":430,"title":{},"body":{"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["alert('usuario",{"_index":649,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["allows",{"_index":77,"title":{},"body":{"guards/AuthGuard.html":{}}}],["angular",{"_index":764,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":316,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":378,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["app.component.css",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":709,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":772,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array.isarray(currentinventario",{"_index":536,"title":{},"body":{"injectables/InventarioService.html":{}}}],["array.isarray(currentusuarios",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["artifacts",{"_index":783,"title":{},"body":{"index.html":{}}}],["autenticación",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["autenticado",{"_index":100,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{}}}],["auth.service",{"_index":103,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"components/InventarioComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["authenticated",{"_index":81,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authguard",{"_index":73,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["authloginguard",{"_index":113,"title":{"guards/AuthLoginGuard.html":{}},"body":{"guards/AuthLoginGuard.html":{},"coverage.html":{}}}],["authservice",{"_index":86,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{}}}],["automatically",{"_index":773,"title":{},"body":{"index.html":{}}}],["barra",{"_index":657,"title":{},"body":{"components/NavbarComponent.html":{}}}],["behaviorsubject",{"_index":524,"title":{},"body":{"injectables/InventarioService.html":{}}}],["bolean",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["boolean",{"_index":102,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/InventarioService.html":{},"components/LoginRegistroComponent.html":{}}}],["bootstrap",{"_index":732,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["borra",{"_index":285,"title":{},"body":{"components/InventarioComponent.html":{}}}],["browser",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":782,"title":{},"body":{"index.html":{}}}],["buttonadd",{"_index":267,"title":{},"body":{"components/InventarioComponent.html":{}}}],["buttonborrar",{"_index":268,"title":{},"body":{"components/InventarioComponent.html":{}}}],["buttonborrar(id",{"_index":282,"title":{},"body":{"components/InventarioComponent.html":{}}}],["buttonedit",{"_index":269,"title":{},"body":{"components/InventarioComponent.html":{}}}],["buttonedit(id",{"_index":286,"title":{},"body":{"components/InventarioComponent.html":{}}}],["buttonutilizar",{"_index":270,"title":{},"body":{"components/InventarioComponent.html":{}}}],["buttonutilizar(id",{"_index":292,"title":{},"body":{"components/InventarioComponent.html":{}}}],["cambiado",{"_index":446,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["campos",{"_index":459,"title":{},"body":{"components/InventarioNuevoComponent.html":{},"components/LoginComponent.html":{}}}],["canactivate",{"_index":83,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{}}}],["canactivate(route",{"_index":118,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["cantidad",{"_index":349,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{}}}],["capabilities",{"_index":802,"title":{},"body":{"index.html":{}}}],["caracteres",{"_index":406,"title":{},"body":{"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["carga",{"_index":486,"title":{},"body":{"injectables/InventarioService.html":{}}}],["cargado",{"_index":389,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["cargar",{"_index":391,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["castrol",{"_index":511,"title":{},"body":{"injectables/InventarioService.html":{}}}],["catch",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InventarioService.html":{}}}],["category",{"_index":306,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{}}}],["categoría",{"_index":348,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{}}}],["cerrar",{"_index":664,"title":{},"body":{"components/NavbarComponent.html":{}}}],["chanchito",{"_index":499,"title":{},"body":{"injectables/InventarioService.html":{}}}],["change",{"_index":775,"title":{},"body":{"index.html":{}}}],["check",{"_index":807,"title":{},"body":{"index.html":{}}}],["choice",{"_index":796,"title":{},"body":{"index.html":{}}}],["cierra",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["cli",{"_index":765,"title":{},"body":{"index.html":{}}}],["code",{"_index":777,"title":{},"body":{"index.html":{}}}],["coinciden",{"_index":625,"title":{},"body":{"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["command",{"_index":797,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":262,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["completada",{"_index":331,"title":{},"body":{"components/InventarioComponent.html":{}}}],["complete",{"_index":329,"title":{},"body":{"components/InventarioComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["componente",{"_index":256,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"overview.html":{}}}],["con",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InventarioService.html":{}}}],["config",{"_index":706,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmar",{"_index":655,"title":{},"body":{"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["confirmpassword",{"_index":639,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["confpassword",{"_index":617,"title":{},"body":{"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["console.error(\"localstorage",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InventarioService.html":{}}}],["console.error('error",{"_index":327,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["console.error('id",{"_index":392,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{}}}],["console.error('no",{"_index":426,"title":{},"body":{"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["console.error('producto",{"_index":390,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["console.error('todos",{"_index":458,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["console.error(`elemento",{"_index":551,"title":{},"body":{"injectables/InventarioService.html":{}}}],["console.log(\"localstorage",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(\"logout",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["console.log('borrar",{"_index":343,"title":{},"body":{"components/InventarioComponent.html":{}}}],["console.log('cantidad",{"_index":428,"title":{},"body":{"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["console.log('componente",{"_index":448,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["console.log('producto",{"_index":388,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{}}}],["console.log('suscripción",{"_index":330,"title":{},"body":{"components/InventarioComponent.html":{}}}],["console.log('todos",{"_index":600,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(`elemento",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(data",{"_index":324,"title":{},"body":{"components/InventarioComponent.html":{}}}],["console.log(this.data_user",{"_index":691,"title":{},"body":{"components/PerfilComponent.html":{}}}],["console.log(this.inventario",{"_index":336,"title":{},"body":{"components/InventarioComponent.html":{}}}],["console.log(this.loginform.get('username')?.value",{"_index":594,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(this.user_role",{"_index":334,"title":{},"body":{"components/InventarioComponent.html":{}}}],["console.log(usuarios",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{}}}],["constructor",{"_index":84,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["constructor(authservice",{"_index":85,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["constructor(inventarioservice",{"_index":274,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioNuevoComponent.html":{}}}],["constructor(private",{"_index":107,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["constructor(route",{"_index":367,"title":{},"body":{"components/InventarioEditarComponent.html":{},"components/InventarioUtilizarComponent.html":{}}}],["constructor(router",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["contraseña",{"_index":607,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["contraseñas",{"_index":624,"title":{},"body":{"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["coolmax",{"_index":313,"title":{},"body":{"components/InventarioComponent.html":{}}}],["correo",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["coverage",{"_index":695,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crear",{"_index":398,"title":{},"body":{"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{}}}],["create",{"_index":652,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["cuenta",{"_index":654,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["currentinventario",{"_index":535,"title":{},"body":{"injectables/InventarioService.html":{}}}],["currentinventario.filter((item",{"_index":547,"title":{},"body":{"injectables/InventarioService.html":{}}}],["currentinventario.find((item",{"_index":553,"title":{},"body":{"injectables/InventarioService.html":{}}}],["currentinventario.findindex((item",{"_index":548,"title":{},"body":{"injectables/InventarioService.html":{}}}],["currentinventario.length",{"_index":538,"title":{},"body":{"injectables/InventarioService.html":{}}}],["currentinventario.push(newitem",{"_index":544,"title":{},"body":{"injectables/InventarioService.html":{}}}],["currentinventario[currentinventario.length",{"_index":541,"title":{},"body":{"injectables/InventarioService.html":{}}}],["currentinventario[index",{"_index":550,"title":{},"body":{"injectables/InventarioService.html":{}}}],["currentinventario[index].quantity",{"_index":556,"title":{},"body":{"injectables/InventarioService.html":{}}}],["currentusuarios",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentusuarios.findindex((item",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentusuarios.push(usuario",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentusuarios[index",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["data",{"_index":323,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["data.category",{"_index":386,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{}}}],["data_user",{"_index":674,"title":{},"body":{"components/PerfilComponent.html":{}}}],["de",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["debe",{"_index":409,"title":{},"body":{"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{}}}],["default",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InventarioService.html":{}}}],["defined",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["del",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{}}}],["deleteitemfrominventario",{"_index":467,"title":{},"body":{"injectables/InventarioService.html":{}}}],["deleteitemfrominventario(id",{"_index":478,"title":{},"body":{"injectables/InventarioService.html":{}}}],["dependencies",{"_index":736,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["descontar",{"_index":563,"title":{},"body":{"components/InventarioUtilizarComponent.html":{}}}],["descripción",{"_index":351,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{}}}],["description",{"_index":76,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["deseas",{"_index":340,"title":{},"body":{"components/InventarioComponent.html":{}}}],["dev",{"_index":769,"title":{},"body":{"index.html":{}}}],["development",{"_index":767,"title":{},"body":{"index.html":{}}}],["directive",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["directives",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":781,"title":{},"body":{"index.html":{}}}],["directory",{"_index":786,"title":{},"body":{"index.html":{}}}],["disponible",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InventarioService.html":{}}}],["dist",{"_index":785,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["dummy",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["dynamic",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"injectables/InventarioService.html":{}}}],["e2e",{"_index":794,"title":{},"body":{"index.html":{}}}],["edge",{"_index":512,"title":{},"body":{"injectables/InventarioService.html":{}}}],["editar",{"_index":291,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{}}}],["editar'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["editar.component.css",{"_index":364,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{}}}],["editar.component.html",{"_index":363,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{}}}],["editar.component.ts",{"_index":361,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"coverage.html":{}}}],["editar.component.ts:32",{"_index":369,"title":{},"body":{"components/InventarioEditarComponent.html":{}}}],["editar.component.ts:42",{"_index":374,"title":{},"body":{"components/InventarioEditarComponent.html":{}}}],["editar.component.ts:43",{"_index":376,"title":{},"body":{"components/InventarioEditarComponent.html":{}}}],["editar.component.ts:48",{"_index":370,"title":{},"body":{"components/InventarioEditarComponent.html":{}}}],["editar.component.ts:79",{"_index":371,"title":{},"body":{"components/InventarioEditarComponent.html":{}}}],["editar/inventario",{"_index":360,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"coverage.html":{}}}],["ejecuta",{"_index":299,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["el",{"_index":93,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["element",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["elimina",{"_index":480,"title":{},"body":{"injectables/InventarioService.html":{}}}],["eliminar",{"_index":341,"title":{},"body":{"components/InventarioComponent.html":{}}}],["en",{"_index":394,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"components/InventarioNuevoComponent.html":{}}}],["encarga",{"_index":259,"title":{},"body":{"components/InventarioComponent.html":{}}}],["encontr",{"_index":427,"title":{},"body":{"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["encontrado",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{}}}],["end",{"_index":793,"title":{},"body":{"index.html":{}}}],["enviar",{"_index":372,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["error",{"_index":326,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["es",{"_index":400,"title":{},"body":{"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["est",{"_index":99,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/InventarioService.html":{}}}],["establece",{"_index":489,"title":{},"body":{"injectables/InventarioService.html":{}}}],["establecer",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["este",{"_index":257,"title":{},"body":{"components/InventarioComponent.html":{}}}],["eventcoalescing",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":790,"title":{},"body":{"index.html":{}}}],["export",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["express",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["express.express",{"_index":758,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":112,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/InventarioService.html":{}}}],["fb",{"_index":574,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{}}}],["feliz",{"_index":500,"title":{},"body":{"injectables/InventarioService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{}}}],["files",{"_index":776,"title":{},"body":{"index.html":{}}}],["filtro",{"_index":496,"title":{},"body":{"injectables/InventarioService.html":{}}}],["first",{"_index":799,"title":{},"body":{"index.html":{}}}],["form",{"_index":626,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["form.get('confirmpassword')?.value",{"_index":642,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["form.get('password')?.value",{"_index":641,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["formbuilder",{"_index":575,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{}}}],["formgroup",{"_index":579,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{}}}],["formgroup,formbuilder",{"_index":586,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodule",{"_index":362,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["formsmodule,commonmodule",{"_index":683,"title":{},"body":{"components/PerfilComponent.html":{}}}],["formulario",{"_index":373,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["formulariocontrols",{"_index":573,"title":{},"body":{"components/LoginComponent.html":{}}}],["freno",{"_index":503,"title":{},"body":{"injectables/InventarioService.html":{}}}],["funcion",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"injectables/InventarioService.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["funciona",{"_index":384,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{}}}],["función",{"_index":278,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{}}}],["function",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":757,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":803,"title":{},"body":{"index.html":{}}}],["generate",{"_index":779,"title":{},"body":{"index.html":{}}}],["generated",{"_index":763,"title":{},"body":{"index.html":{}}}],["generica",{"_index":519,"title":{},"body":{"injectables/InventarioService.html":{}}}],["getformulariocontrols",{"_index":583,"title":{},"body":{"components/LoginComponent.html":{}}}],["getinventario",{"_index":468,"title":{},"body":{"injectables/InventarioService.html":{}}}],["getitembyid",{"_index":469,"title":{},"body":{"injectables/InventarioService.html":{}}}],["getitembyid(id",{"_index":482,"title":{},"body":{"injectables/InventarioService.html":{}}}],["getloggeduser",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["getting",{"_index":759,"title":{"index.html":{}},"body":{}}],["getuserrole",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusuarios",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["go",{"_index":806,"title":{},"body":{"index.html":{}}}],["gtx",{"_index":506,"title":{},"body":{"injectables/InventarioService.html":{}}}],["guard",{"_index":72,"title":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{}},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"coverage.html":{}}}],["guardar",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["guards",{"_index":74,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"overview.html":{}}}],["help",{"_index":804,"title":{},"body":{"index.html":{}}}],["html",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["http://localhost:4200",{"_index":771,"title":{},"body":{"index.html":{}}}],["id",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{}}}],["identifier",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["idparam",{"_index":380,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["if(confirm(\"¿estás",{"_index":338,"title":{},"body":{"components/InventarioComponent.html":{}}}],["if(usuario",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["igual",{"_index":413,"title":{},"body":{"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{}}}],["implements",{"_index":106,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/PerfilComponent.html":{},"index.html":{}}}],["import",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["incorrectas",{"_index":599,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["informacion",{"_index":694,"title":{},"body":{"components/PerfilComponent.html":{}}}],["ingresar",{"_index":603,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{}}}],["inicializado",{"_index":449,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["iniciar",{"_index":300,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["inicio",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["injectable",{"_index":104,"title":{"injectables/AuthService.html":{},"injectables/InventarioService.html":{}},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/InventarioService.html":{},"coverage.html":{}}}],["injectables",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InventarioService.html":{},"overview.html":{}}}],["insumo",{"_index":387,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"components/InventarioNuevoComponent.html":{}}}],["insumos",{"_index":307,"title":{},"body":{"components/InventarioComponent.html":{},"injectables/InventarioService.html":{}}}],["interface",{"_index":379,"title":{"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{}},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"coverage.html":{}}}],["interfaces",{"_index":417,"title":{},"body":{"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"overview.html":{}}}],["inventario",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["inventario'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["inventario.component.css",{"_index":264,"title":{},"body":{"components/InventarioComponent.html":{}}}],["inventario.component.html",{"_index":263,"title":{},"body":{"components/InventarioComponent.html":{}}}],["inventario.service",{"_index":317,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{}}}],["inventario/id",{"_index":320,"title":{},"body":{"components/InventarioComponent.html":{}}}],["inventariocomponent",{"_index":51,"title":{"components/InventarioComponent.html":{}},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{}}}],["inventarioeditarcomponent",{"_index":53,"title":{"components/InventarioEditarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{}}}],["inventarioitem",{"_index":375,"title":{"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{}},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"coverage.html":{}}}],["inventarionuevocomponent",{"_index":56,"title":{"components/InventarioNuevoComponent.html":{}},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{}}}],["inventarioservice",{"_index":275,"title":{"injectables/InventarioService.html":{}},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"coverage.html":{}}}],["inventarioservice,private",{"_index":447,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["inventariosubject",{"_index":465,"title":{},"body":{"injectables/InventarioService.html":{}}}],["inventarioutilizarcomponent",{"_index":58,"title":{"components/InventarioUtilizarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{}}}],["inválido",{"_index":393,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{}}}],["isauthenticated",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["islocalstorageavailable",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InventarioService.html":{}}}],["item",{"_index":280,"title":{},"body":{"components/InventarioComponent.html":{},"injectables/InventarioService.html":{}}}],["item.category",{"_index":355,"title":{},"body":{"components/InventarioComponent.html":{}}}],["item.description",{"_index":358,"title":{},"body":{"components/InventarioComponent.html":{}}}],["item.id",{"_index":353,"title":{},"body":{"components/InventarioComponent.html":{},"injectables/InventarioService.html":{}}}],["item.name",{"_index":354,"title":{},"body":{"components/InventarioComponent.html":{}}}],["item.price",{"_index":357,"title":{},"body":{"components/InventarioComponent.html":{}}}],["item.quantity",{"_index":356,"title":{},"body":{"components/InventarioComponent.html":{}}}],["item.username",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["itemencontrado",{"_index":552,"title":{},"body":{"injectables/InventarioService.html":{}}}],["json",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(localstorage.getitem('inventario",{"_index":532,"title":{},"body":{"injectables/InventarioService.html":{}}}],["json.parse(localstorage.getitem('user_session",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(localstorage.getitem('usuarios",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(currentinventario",{"_index":545,"title":{},"body":{"injectables/InventarioService.html":{}}}],["json.stringify(currentusuarios",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(inventario",{"_index":534,"title":{},"body":{"injectables/InventarioService.html":{}}}],["json.stringify(usuarios",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify({username",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":792,"title":{},"body":{"index.html":{}}}],["la",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["las",{"_index":623,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["lastitem",{"_index":540,"title":{},"body":{"injectables/InventarioService.html":{}}}],["lastitem.id",{"_index":542,"title":{},"body":{"injectables/InventarioService.html":{}}}],["legend",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["listado",{"_index":345,"title":{},"body":{"components/InventarioComponent.html":{}}}],["loadinventario",{"_index":470,"title":{},"body":{"injectables/InventarioService.html":{}}}],["localstorage",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InventarioService.html":{}}}],["localstorage.getitem('inventario",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InventarioService.html":{}}}],["localstorage.getitem('rol",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('usuarios",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(\"user_session",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('rol",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('token",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(testkey",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InventarioService.html":{}}}],["localstorage.setitem(\"user_session",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('inventario",{"_index":533,"title":{},"body":{"injectables/InventarioService.html":{}}}],["localstorage.setitem('rol",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('token",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('usuarios",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(testkey",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InventarioService.html":{}}}],["loggedin",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["login'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["login(username",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":569,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":568,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.guard.ts",{"_index":115,"title":{},"body":{"guards/AuthLoginGuard.html":{},"coverage.html":{}}}],["login.guard.ts:11",{"_index":117,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["login.guard.ts:20",{"_index":122,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["logincomponent",{"_index":60,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":570,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginregistrocomponent",{"_index":62,"title":{"components/LoginRegistroComponent.html":{}},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{}}}],["logout",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["logueado",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["los",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"components/InventarioNuevoComponent.html":{},"components/LoginComponent.html":{}}}],["líquido",{"_index":304,"title":{},"body":{"components/InventarioComponent.html":{}}}],["maneja",{"_index":464,"title":{},"body":{"injectables/InventarioService.html":{}}}],["marca",{"_index":312,"title":{},"body":{"components/InventarioComponent.html":{},"injectables/InventarioService.html":{}}}],["matching",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max_stock",{"_index":423,"title":{},"body":{"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["mayor",{"_index":411,"title":{},"body":{"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{}}}],["mec",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["mec@taller.com",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["meca",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["mecanico",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["mecánico",{"_index":668,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menos",{"_index":606,"title":{},"body":{"components/LoginComponent.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["methods",{"_index":82,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["mi",{"_index":669,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["miscellaneous",{"_index":756,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modifica",{"_index":692,"title":{},"body":{"components/PerfilComponent.html":{}}}],["modules",{"_index":812,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":805,"title":{},"body":{"index.html":{}}}],["mostrar",{"_index":260,"title":{},"body":{"components/InventarioComponent.html":{}}}],["más",{"_index":404,"title":{},"body":{"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"index.html":{}}}],["navbar",{"_index":659,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["navbar.component.css",{"_index":661,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":660,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["navbarcomponent",{"_index":18,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{}}}],["navegación",{"_index":658,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navigate",{"_index":770,"title":{},"body":{"index.html":{}}}],["navigatetonuevo",{"_index":271,"title":{},"body":{"components/InventarioComponent.html":{}}}],["need",{"_index":798,"title":{},"body":{"index.html":{}}}],["new",{"_index":523,"title":{},"body":{"injectables/InventarioService.html":{},"coverage.html":{},"index.html":{}}}],["newid",{"_index":537,"title":{},"body":{"injectables/InventarioService.html":{}}}],["newitem",{"_index":477,"title":{},"body":{"injectables/InventarioService.html":{}}}],["newitem.id",{"_index":543,"title":{},"body":{"injectables/InventarioService.html":{}}}],["newusuario",{"_index":644,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["next",{"_index":322,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["ng",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ngform",{"_index":377,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["ngoninit",{"_index":272,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["nombre",{"_index":347,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["nuevo",{"_index":297,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{}}}],["nuevo'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["nuevo.component.css",{"_index":436,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["nuevo.component.html",{"_index":437,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["nuevo.component.ts",{"_index":434,"title":{},"body":{"components/InventarioNuevoComponent.html":{},"coverage.html":{}}}],["nuevo.component.ts:24",{"_index":443,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["nuevo.component.ts:25",{"_index":441,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["nuevo.component.ts:26",{"_index":445,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["nuevo.component.ts:27",{"_index":444,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["nuevo.component.ts:28",{"_index":442,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["nuevo.component.ts:29",{"_index":438,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["nuevo.component.ts:36",{"_index":439,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["nuevo.component.ts:43",{"_index":440,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["nuevo/inventario",{"_index":433,"title":{},"body":{"components/InventarioNuevoComponent.html":{},"coverage.html":{}}}],["nuevoproducto",{"_index":265,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioNuevoComponent.html":{}}}],["null",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"components/InventarioNuevoComponent.html":{},"components/LoginRegistroComponent.html":{}}}],["number",{"_index":283,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{}}}],["number(id",{"_index":554,"title":{},"body":{"injectables/InventarioService.html":{}}}],["número",{"_index":414,"title":{},"body":{"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{}}}],["o",{"_index":412,"title":{},"body":{"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{}}}],["object",{"_index":303,"title":{},"body":{"components/InventarioComponent.html":{}}}],["obligatoria",{"_index":408,"title":{},"body":{"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["obligatorio",{"_index":401,"title":{},"body":{"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["obligatorios",{"_index":461,"title":{},"body":{"components/InventarioNuevoComponent.html":{},"components/LoginComponent.html":{}}}],["obtener",{"_index":328,"title":{},"body":{"components/InventarioComponent.html":{}}}],["obtenerinventario",{"_index":273,"title":{},"body":{"components/InventarioComponent.html":{}}}],["obtiene",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"injectables/InventarioService.html":{}}}],["of(itemencontrado",{"_index":555,"title":{},"body":{"injectables/InventarioService.html":{}}}],["oninit",{"_index":261,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["onsubmit",{"_index":366,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{}}}],["optional",{"_index":90,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["out",{"_index":808,"title":{},"body":{"index.html":{}}}],["overview",{"_index":809,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":735,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":811,"title":{},"body":{"index.html":{}}}],["para",{"_index":290,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["param",{"_index":124,"title":{},"body":{"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"injectables/InventarioService.html":{}}}],["parameters",{"_index":89,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["password",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["passwordmatchvalidator",{"_index":619,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["passwordmatchvalidator(form",{"_index":621,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["passwordmismatch",{"_index":627,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["pastillas",{"_index":502,"title":{},"body":{"injectables/InventarioService.html":{}}}],["paño",{"_index":515,"title":{},"body":{"injectables/InventarioService.html":{}}}],["perfil",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["perfil.component.css",{"_index":673,"title":{},"body":{"components/PerfilComponent.html":{}}}],["perfil.component.html",{"_index":672,"title":{},"body":{"components/PerfilComponent.html":{}}}],["perfilcomponent",{"_index":66,"title":{"components/PerfilComponent.html":{}},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{}}}],["permite",{"_index":92,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["platform",{"_index":795,"title":{},"body":{"index.html":{}}}],["popperjs/core",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["por",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InventarioService.html":{}}}],["precio",{"_index":350,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{}}}],["price",{"_index":310,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{}}}],["private",{"_index":108,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["producto",{"_index":365,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{}}}],["project",{"_index":762,"title":{},"body":{"index.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"properties.html":{}}}],["provideclienthydration",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":105,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/InventarioService.html":{}}}],["providerouter",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["providerouter(routes",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["puede",{"_index":402,"title":{},"body":{"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["página",{"_index":289,"title":{},"body":{"components/InventarioComponent.html":{}}}],["quantity",{"_index":308,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{}}}],["que",{"_index":116,"title":{},"body":{"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["reactiveformsmodule",{"_index":566,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{}}}],["reactiveformsmodule,commonmodule",{"_index":587,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{}}}],["readonly",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["redirige",{"_index":288,"title":{},"body":{"components/InventarioComponent.html":{}}}],["redirigir",{"_index":319,"title":{},"body":{"components/InventarioComponent.html":{}}}],["reference",{"_index":810,"title":{},"body":{"index.html":{}}}],["refrigerante",{"_index":305,"title":{},"body":{"components/InventarioComponent.html":{}}}],["registerform",{"_index":618,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["registrado",{"_index":650,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["registrarse",{"_index":610,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{}}}],["registro",{"_index":614,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["registro'},{'name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["registro.component.css",{"_index":616,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["registro.component.html",{"_index":615,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["registro.component.ts",{"_index":613,"title":{},"body":{"components/LoginRegistroComponent.html":{},"coverage.html":{}}}],["registro.component.ts:21",{"_index":633,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["registro.component.ts:22",{"_index":631,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["registro.component.ts:23",{"_index":630,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["registro.component.ts:24",{"_index":632,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["registro.component.ts:25",{"_index":629,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["registro.component.ts:26",{"_index":634,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["registro.component.ts:27",{"_index":620,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["registro.component.ts:44",{"_index":622,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["registro.component.ts:55",{"_index":628,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["registro/login",{"_index":612,"title":{},"body":{"components/LoginRegistroComponent.html":{},"coverage.html":{}}}],["reload",{"_index":774,"title":{},"body":{"index.html":{}}}],["repuesto",{"_index":407,"title":{},"body":{"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{}}}],["repuestos",{"_index":346,"title":{},"body":{"components/InventarioComponent.html":{},"injectables/InventarioService.html":{}}}],["requerida",{"_index":608,"title":{},"body":{"components/LoginComponent.html":{}}}],["requerido",{"_index":605,"title":{},"body":{"components/LoginComponent.html":{}}}],["restar",{"_index":420,"title":{},"body":{"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["results",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":110,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/InventarioService.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{}}}],["returns",{"_index":101,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"miscellaneous/functions.html":{}}}],["rol",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["role",{"_index":571,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/InventarioService.html":{}}}],["root'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["route",{"_index":123,"title":{},"body":{"guards/AuthLoginGuard.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["router",{"_index":87,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["router,private",{"_index":635,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["routermodule",{"_index":567,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["routeroutlet",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["routerstatesnapshot",{"_index":121,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["routes",{"_index":79,"title":{},"body":{"guards/AuthGuard.html":{}}}],["run",{"_index":702,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["running",{"_index":787,"title":{},"body":{"index.html":{}}}],["rutas",{"_index":95,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{}}}],["rxjs",{"_index":526,"title":{},"body":{"injectables/InventarioService.html":{},"dependencies.html":{}}}],["salir",{"_index":670,"title":{},"body":{"components/NavbarComponent.html":{}}}],["saveusuario",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["saveusuario(usuario",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["scaffolding",{"_index":778,"title":{},"body":{"index.html":{}}}],["se",{"_index":258,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["seguro",{"_index":339,"title":{},"body":{"components/InventarioComponent.html":{}}}],["seleccionar",{"_index":462,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["ser",{"_index":410,"title":{},"body":{"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{}}}],["serve",{"_index":768,"title":{},"body":{"index.html":{}}}],["server",{"_index":743,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["server.ts",{"_index":699,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["serverconfig",{"_index":707,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["servicio",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InventarioService.html":{}}}],["sesión",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["setinventariodefault",{"_index":471,"title":{},"body":{"injectables/InventarioService.html":{}}}],["setinventariodefault(inventario",{"_index":487,"title":{},"body":{"injectables/InventarioService.html":{}}}],["setuusuariosdefault",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["setuusuariosdefault(usuarios",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["si",{"_index":97,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"injectables/InventarioService.html":{},"components/LoginRegistroComponent.html":{}}}],["sintético",{"_index":508,"title":{},"body":{"injectables/InventarioService.html":{}}}],["sistema",{"_index":604,"title":{},"body":{"components/LoginComponent.html":{}}}],["solo",{"_index":96,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{}}}],["son",{"_index":460,"title":{},"body":{"components/InventarioNuevoComponent.html":{},"components/LoginComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"index.html":{}}}],["src/.../app.config.server.ts",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":704,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":708,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth",{"_index":114,"title":{},"body":{"guards/AuthLoginGuard.html":{},"coverage.html":{}}}],["src/app/auth.guard.ts",{"_index":75,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth.guard.ts:14",{"_index":88,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth.guard.ts:20",{"_index":91,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth.service.ts",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth.service.ts:102",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:115",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:129",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:13",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:138",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:154",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:165",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:22",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:23",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:25",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:37",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:68",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:80",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:90",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/inventario",{"_index":359,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"coverage.html":{}}}],["src/app/inventario.service.ts",{"_index":463,"title":{},"body":{"injectables/InventarioService.html":{},"coverage.html":{}}}],["src/app/inventario.service.ts:11",{"_index":525,"title":{},"body":{"injectables/InventarioService.html":{}}}],["src/app/inventario.service.ts:118",{"_index":479,"title":{},"body":{"injectables/InventarioService.html":{}}}],["src/app/inventario.service.ts:12",{"_index":522,"title":{},"body":{"injectables/InventarioService.html":{}}}],["src/app/inventario.service.ts:137",{"_index":491,"title":{},"body":{"injectables/InventarioService.html":{}}}],["src/app/inventario.service.ts:14",{"_index":520,"title":{},"body":{"injectables/InventarioService.html":{}}}],["src/app/inventario.service.ts:163",{"_index":483,"title":{},"body":{"injectables/InventarioService.html":{}}}],["src/app/inventario.service.ts:180",{"_index":484,"title":{},"body":{"injectables/InventarioService.html":{}}}],["src/app/inventario.service.ts:196",{"_index":495,"title":{},"body":{"injectables/InventarioService.html":{}}}],["src/app/inventario.service.ts:47",{"_index":474,"title":{},"body":{"injectables/InventarioService.html":{}}}],["src/app/inventario.service.ts:59",{"_index":485,"title":{},"body":{"injectables/InventarioService.html":{}}}],["src/app/inventario.service.ts:69",{"_index":481,"title":{},"body":{"injectables/InventarioService.html":{}}}],["src/app/inventario.service.ts:81",{"_index":488,"title":{},"body":{"injectables/InventarioService.html":{}}}],["src/app/inventario.service.ts:92",{"_index":476,"title":{},"body":{"injectables/InventarioService.html":{}}}],["src/app/inventario/inventario.component.ts",{"_index":255,"title":{},"body":{"components/InventarioComponent.html":{},"coverage.html":{}}}],["src/app/inventario/inventario.component.ts:107",{"_index":284,"title":{},"body":{"components/InventarioComponent.html":{}}}],["src/app/inventario/inventario.component.ts:118",{"_index":295,"title":{},"body":{"components/InventarioComponent.html":{}}}],["src/app/inventario/inventario.component.ts:30",{"_index":293,"title":{},"body":{"components/InventarioComponent.html":{}}}],["src/app/inventario/inventario.component.ts:32",{"_index":276,"title":{},"body":{"components/InventarioComponent.html":{}}}],["src/app/inventario/inventario.component.ts:38",{"_index":302,"title":{},"body":{"components/InventarioComponent.html":{}}}],["src/app/inventario/inventario.component.ts:39",{"_index":315,"title":{},"body":{"components/InventarioComponent.html":{}}}],["src/app/inventario/inventario.component.ts:48",{"_index":287,"title":{},"body":{"components/InventarioComponent.html":{}}}],["src/app/inventario/inventario.component.ts:58",{"_index":298,"title":{},"body":{"components/InventarioComponent.html":{}}}],["src/app/inventario/inventario.component.ts:79",{"_index":301,"title":{},"body":{"components/InventarioComponent.html":{}}}],["src/app/inventario/inventario.component.ts:84",{"_index":314,"title":{},"body":{"components/InventarioComponent.html":{}}}],["src/app/inventario/inventario.component.ts:96",{"_index":277,"title":{},"body":{"components/InventarioComponent.html":{}}}],["src/app/login",{"_index":611,"title":{},"body":{"components/LoginRegistroComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":565,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:22",{"_index":582,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":580,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:24",{"_index":581,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:25",{"_index":576,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":577,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:48",{"_index":578,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:69",{"_index":584,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":656,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:19",{"_index":662,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:23",{"_index":666,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:30",{"_index":665,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:40",{"_index":663,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/perfil/perfil.component.ts",{"_index":671,"title":{},"body":{"components/PerfilComponent.html":{},"coverage.html":{}}}],["src/app/perfil/perfil.component.ts:25",{"_index":678,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/perfil/perfil.component.ts:39",{"_index":681,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/perfil/perfil.component.ts:40",{"_index":682,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/perfil/perfil.component.ts:41",{"_index":680,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/perfil/perfil.component.ts:42",{"_index":679,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/perfil/perfil.component.ts:43",{"_index":676,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/perfil/perfil.component.ts:49",{"_index":677,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/main.server.ts",{"_index":731,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["started",{"_index":760,"title":{"index.html":{}},"body":{}}],["state",{"_index":120,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["statements",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["stock",{"_index":564,"title":{},"body":{"components/InventarioUtilizarComponent.html":{}}}],["stored",{"_index":784,"title":{},"body":{"index.html":{}}}],["storedinventario",{"_index":529,"title":{},"body":{"injectables/InventarioService.html":{}}}],["string",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["styles",{"_index":432,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["styleurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["styleurls",{"_index":435,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["table",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["taller",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"injectables/InventarioService.html":{},"components/NavbarComponent.html":{}}}],["tallermecang",{"_index":761,"title":{},"body":{"index.html":{}}}],["tela",{"_index":516,"title":{},"body":{"injectables/InventarioService.html":{}}}],["tem",{"_index":399,"title":{},"body":{"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["tener",{"_index":403,"title":{},"body":{"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["test",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InventarioService.html":{},"index.html":{}}}],["testing",{"_index":801,"title":{},"body":{"index.html":{}}}],["testkey",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InventarioService.html":{}}}],["tests",{"_index":789,"title":{},"body":{"index.html":{}}}],["this.authservice.getloggeduser",{"_index":688,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.authservice.getuserrole",{"_index":333,"title":{},"body":{"components/InventarioComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["this.authservice.isauthenticated",{"_index":109,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{}}}],["this.authservice.login(this.loginform.get('username')?.value",{"_index":595,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":667,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.saveusuario(newusuario",{"_index":648,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["this.authservice.updateuser(updateduser",{"_index":685,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.category",{"_index":451,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["this.confpassword",{"_index":684,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.correo",{"_index":646,"title":{},"body":{"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["this.data_user",{"_index":687,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.data_user.correo",{"_index":690,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.data_user.username",{"_index":689,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.description",{"_index":454,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["this.fb.group",{"_index":589,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{}}}],["this.getinventario",{"_index":530,"title":{},"body":{"injectables/InventarioService.html":{}}}],["this.getusuarios",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.id",{"_index":397,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{}}}],["this.inventario",{"_index":325,"title":{},"body":{"components/InventarioComponent.html":{},"injectables/InventarioService.html":{}}}],["this.inventarioservice.additemtoinventario(this.nuevoproducto",{"_index":337,"title":{},"body":{"components/InventarioComponent.html":{},"components/InventarioNuevoComponent.html":{}}}],["this.inventarioservice.deleteitemfrominventario(id",{"_index":342,"title":{},"body":{"components/InventarioComponent.html":{}}}],["this.inventarioservice.getinventario",{"_index":335,"title":{},"body":{"components/InventarioComponent.html":{}}}],["this.inventarioservice.getitembyid(idparam).subscribe",{"_index":382,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["this.inventarioservice.inventario$.subscribe",{"_index":321,"title":{},"body":{"components/InventarioComponent.html":{}}}],["this.inventarioservice.updateitem(this.producto",{"_index":396,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{}}}],["this.inventarioservice.updateitemquantity(this.producto.id",{"_index":429,"title":{},"body":{"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["this.inventariosubject.asobservable",{"_index":521,"title":{},"body":{"injectables/InventarioService.html":{}}}],["this.inventariosubject.next(currentinventario",{"_index":546,"title":{},"body":{"injectables/InventarioService.html":{}}}],["this.inventariosubject.next(storedinventario",{"_index":531,"title":{},"body":{"injectables/InventarioService.html":{}}}],["this.islocalstorageavailable",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InventarioService.html":{}}}],["this.loadinventario",{"_index":528,"title":{},"body":{"injectables/InventarioService.html":{}}}],["this.loginform",{"_index":588,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":601,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password')?.value",{"_index":596,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.valid",{"_index":593,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.max_stock",{"_index":424,"title":{},"body":{"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["this.name",{"_index":450,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["this.nuevoproducto",{"_index":455,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["this.password",{"_index":647,"title":{},"body":{"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["this.passwordmatchvalidator",{"_index":640,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["this.price",{"_index":453,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["this.producto",{"_index":383,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["this.producto.category",{"_index":385,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{}}}],["this.producto.quantity",{"_index":425,"title":{},"body":{"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["this.quantity",{"_index":452,"title":{},"body":{"components/InventarioNuevoComponent.html":{}}}],["this.registerform",{"_index":636,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["this.registerform.valid",{"_index":643,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["this.role",{"_index":597,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":381,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["this.router",{"_index":431,"title":{},"body":{"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["this.router.navigate(['/inventario",{"_index":125,"title":{},"body":{"guards/AuthLoginGuard.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate(['/inventario/nuevo",{"_index":344,"title":{},"body":{"components/InventarioComponent.html":{}}}],["this.router.navigate(['/inventario/utilizar",{"_index":318,"title":{},"body":{"components/InventarioComponent.html":{}}}],["this.router.navigate(['/login",{"_index":111,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["this.setinventariodefault(this.inventario",{"_index":527,"title":{},"body":{"injectables/InventarioService.html":{}}}],["this.setuusuariosdefault(this.usuarios",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user_role",{"_index":332,"title":{},"body":{"components/InventarioComponent.html":{}}}],["this.username",{"_index":645,"title":{},"body":{"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["this.usuarios",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["title",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InventarioService.html":{}}}],["tslib",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":693,"title":{},"body":{"components/PerfilComponent.html":{}}}],["type",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["u.password",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["u.username",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["un",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{}}}],["una",{"_index":653,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["undefined",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["unit",{"_index":788,"title":{},"body":{"index.html":{}}}],["updateditem",{"_index":493,"title":{},"body":{"injectables/InventarioService.html":{}}}],["updateditem.id",{"_index":549,"title":{},"body":{"injectables/InventarioService.html":{}}}],["updateduser",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"components/PerfilComponent.html":{}}}],["updateduser.username",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateitem",{"_index":472,"title":{},"body":{"injectables/InventarioService.html":{}}}],["updateitem(updateditem",{"_index":490,"title":{},"body":{"injectables/InventarioService.html":{}}}],["updateitemquantity",{"_index":473,"title":{},"body":{"injectables/InventarioService.html":{}}}],["updateitemquantity(id",{"_index":494,"title":{},"body":{"injectables/InventarioService.html":{}}}],["updateperfil",{"_index":675,"title":{},"body":{"components/PerfilComponent.html":{}}}],["updateuser",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuser(updateduser",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["url",{"_index":395,"title":{},"body":{"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{}}}],["use",{"_index":780,"title":{},"body":{"index.html":{}}}],["user",{"_index":80,"title":{},"body":{"guards/AuthGuard.html":{}}}],["user_role",{"_index":266,"title":{},"body":{"components/InventarioComponent.html":{}}}],["username",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["usuario",{"_index":98,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{}}}],["usuario.correo",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["usuario.name",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["usuario.username",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["usuarios",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginRegistroComponent.html":{}}}],["usuarios.find((u",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["utilizar",{"_index":294,"title":{},"body":{"components/InventarioComponent.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["utilizar'},{'name",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["utilizar.component.css",{"_index":422,"title":{},"body":{"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["utilizar.component.html",{"_index":421,"title":{},"body":{"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{}}}],["utilizar.component.ts",{"_index":419,"title":{},"body":{"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{},"coverage.html":{}}}],["utilizar.component.ts:31",{"_index":561,"title":{},"body":{"components/InventarioUtilizarComponent.html":{}}}],["utilizar.component.ts:32",{"_index":562,"title":{},"body":{"components/InventarioUtilizarComponent.html":{}}}],["utilizar.component.ts:33",{"_index":560,"title":{},"body":{"components/InventarioUtilizarComponent.html":{}}}],["utilizar.component.ts:34",{"_index":557,"title":{},"body":{"components/InventarioUtilizarComponent.html":{}}}],["utilizar.component.ts:43",{"_index":558,"title":{},"body":{"components/InventarioUtilizarComponent.html":{}}}],["utilizar.component.ts:74",{"_index":559,"title":{},"body":{"components/InventarioUtilizarComponent.html":{}}}],["utilizar/inventario",{"_index":418,"title":{},"body":{"interfaces/InventarioItem-1.html":{},"components/InventarioUtilizarComponent.html":{},"coverage.html":{}}}],["validators",{"_index":585,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{}}}],["validators.email",{"_index":638,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["validators.maxlength(15",{"_index":637,"title":{},"body":{"components/LoginRegistroComponent.html":{}}}],["validators.minlength(1",{"_index":592,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.minlength(3",{"_index":591,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.required",{"_index":590,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{}}}],["validpassword",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["validusername",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/PerfilComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["variable",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":815,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifica",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InventarioService.html":{},"components/LoginRegistroComponent.html":{}}}],["verificar",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":766,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":791,"title":{},"body":{"index.html":{}}}],["void",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"components/InventarioComponent.html":{},"components/InventarioEditarComponent.html":{},"interfaces/InventarioItem.html":{},"interfaces/InventarioItem-1.html":{},"components/InventarioNuevoComponent.html":{},"injectables/InventarioService.html":{},"components/InventarioUtilizarComponent.html":{},"components/LoginComponent.html":{},"components/LoginRegistroComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"miscellaneous/functions.html":{}}}],["válido",{"_index":415,"title":{},"body":{"components/InventarioEditarComponent.html":{},"components/InventarioNuevoComponent.html":{},"components/LoginRegistroComponent.html":{}}}],["zone.js",{"_index":754,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'taller-meca-ng'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet, provideRouter} from '@angular/router';\nimport { NavbarComponent } from './navbar/navbar.component'; \n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, NavbarComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'taller-meca-ng';\n}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InventarioComponent', 'selector': 'app-inventario'},{'name': 'InventarioEditarComponent', 'selector': 'app-inventario-editar'},{'name': 'InventarioNuevoComponent', 'selector': 'app-inventario-nuevo'},{'name': 'InventarioUtilizarComponent', 'selector': 'app-inventario-utilizar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginRegistroComponent', 'selector': 'app-login-registro'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard that allows access to routes only if the user is authenticated\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.guard.ts:20\n                        \n                    \n\n\n            \n                \n                        Permite el acceso a rutas solo si el usuario está autenticado\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { Injectable } from '@angular/core';\n\n/**\n * @description\n * Guard that allows access to routes only if the user is authenticated\n */\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n  /**\n   * Permite el acceso a rutas solo si el usuario está autenticado\n   * @returns boolean\n   */\n  canActivate(): boolean {\n    if (this.authService.isAuthenticated()) {\n      return true;\n    }\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n  \n\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthLoginGuard.html":{"url":"guards/AuthLoginGuard.html","title":"guard - AuthLoginGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthLoginGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth-login.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard que permite el acceso a rutas solo si el usuario no está autenticado\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth-login.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth-login.guard.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from './auth.service';\n/**\n * @description\n * Guard que permite el acceso a rutas solo si el usuario no está autenticado\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthLoginGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * \n   * @param route \n   * @param state \n   * @returns boolean\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.authService.isAuthenticated()) {\n      this.router.navigate(['/inventario']);\n      return false;\n    }\n    return true;\n  }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio que permite la autenticación de usuarios\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                usuarios\n                            \n                            \n                                    Private\n                                    Readonly\n                                validPassword\n                            \n                            \n                                    Private\n                                    Readonly\n                                validUsername\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLoggedUser\n                            \n                            \n                                getUserRole\n                            \n                            \n                                getUsuarios\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                    Private\n                                isLocalStorageAvailable\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                saveUsuario\n                            \n                            \n                                setUusuariosDefault\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLoggedUser\n                        \n                    \n                \n            \n            \n                \ngetLoggedUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Funcion que obtiene el usuario logueado\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserRole\n                        \n                    \n                \n            \n            \n                \ngetUserRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:90\n                        \n                    \n\n\n            \n                \n                        Funcion que obtiene el rol del usuario\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsuarios\n                        \n                    \n                \n            \n            \n                \ngetUsuarios()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:154\n                        \n                    \n\n\n            \n                \n                        Funcion que obtiene los usuarios\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Funcion que verifica si el usuario está autenticado\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLocalStorageAvailable\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLocalStorageAvailable()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:115\n                        \n                    \n\n\n            \n                \n                        Permite verificar si el LocalStorage está disponible\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Permite el inicio de sesión de un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Funcion que cierra la sesión del usuario\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUsuario\n                        \n                    \n                \n            \n            \n                \nsaveUsuario(usuario: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:138\n                        \n                    \n\n\n            \n                \n                        Funcion que permite guardar un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                usuario\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUusuariosDefault\n                        \n                    \n                \n            \n            \n                \nsetUusuariosDefault(usuarios: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:129\n                        \n                    \n\n\n            \n                \n                        Permite establecer los usuarios por defecto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                usuarios\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(updatedUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:165\n                        \n                    \n\n\n            \n                \n                        Funcion que permite actualizar un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        usuarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {username: 'admin', password: 'admin', name: 'Admin'},\n    {username: 'mecanico', password: 'mecanico', name: 'Mecanico'}\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/auth.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'admin'\n                    \n                \n                    \n                        \n                                Defined in src/app/auth.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validUsername\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'admin'\n                    \n                \n                    \n                        \n                                Defined in src/app/auth.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Servicio que permite la autenticación de usuarios\n */\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n  constructor(private router: Router) {\n    if (this.isLocalStorageAvailable() && !localStorage.getItem('inventario')) {\n      this.setUusuariosDefault(this.usuarios);\n    }\n  }\n\n\n  private readonly validUsername = 'admin';\n  private readonly validPassword = 'admin';\n\n  usuarios = [\n    {username: 'admin', password: 'admin', name: 'Admin'},\n    {username: 'mecanico', password: 'mecanico', name: 'Mecanico'}\n  ];\n\n  /**\n   * Permite el inicio de sesión de un usuario\n   * @param {string} username \n   * @param {string} password \n   * @returns {boolean}\n   */\n\n  login(username: string, password: string): boolean {\n    if (username === 'admin' && password === 'admin') {\n      localStorage.setItem('token', 'dummy-token');\n      localStorage.setItem('rol', 'admin');\n      localStorage.setItem(\"user_session\", JSON.stringify({username: 'admin', loggedIn: true, name: 'Admin', correo: 'admin@taller.com'}));\n\n      return true;\n    } else if (username === 'mecanico' && password === 'mecanico') {\n      localStorage.setItem('token', 'dummy-token');\n      localStorage.setItem('rol', 'mec');\n      localStorage.setItem(\"user_session\", JSON.stringify({username: 'mecanico', loggedIn: true, name: 'Mecanico', correo: 'mec@taller.com'}));\n\n      return true;\n    }else{\n      let usuarios = this.getUsuarios();\n      let usuario = usuarios.find((u: any) => u.username === username && u.password === password);\n      console.log(usuarios);\n      if(usuario){\n        localStorage.setItem('token', 'dummy-token');\n        localStorage.setItem('rol', 'mec');\n        localStorage.setItem(\"user_session\", JSON.stringify({username: usuario.username, loggedIn: true, name: usuario.name, correo: usuario.correo}));\n        return true;\n      }else{\n        return false;\n      }\n    }\n  }\n  /**\n   * Funcion que verifica si el usuario está autenticado\n   * @returns {boolean}\n   */\n  isAuthenticated(): boolean {\n    if (typeof localStorage === 'undefined' || localStorage.getItem('token') === null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Funcion que cierra la sesión del usuario\n   * @returns {void}\n   */\n  logout() {\n    localStorage.removeItem(\"user_session\");\n    localStorage.removeItem('rol');\n    localStorage.removeItem('token');\n  }\n\n  /**\n   * Funcion que obtiene el rol del usuario\n   * @returns {string | bolean}\n   */\n  getUserRole() {\n    if (typeof localStorage === 'undefined' || localStorage.getItem('token') === null) {\n      return false;\n    } else {\n      return localStorage.getItem('rol');\n    }\n  }\n  /**\n   * Funcion que obtiene el usuario logueado\n   * @returns {JSON | bolean}\n   */\n\n  getLoggedUser() {\n    if (typeof localStorage === 'undefined' || localStorage.getItem('token') === null) {\n      return false;\n    } else {\n      return JSON.parse(localStorage.getItem('user_session') || '[]');\n    }\n  }\n\n  /**\n   * Permite verificar si el LocalStorage está disponible\n   * @returns {boolean}\n   */\n\n  private isLocalStorageAvailable(): boolean {\n    try {\n      const testKey = '__test__';\n      localStorage.setItem(testKey, 'test');\n      localStorage.removeItem(testKey);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  /**\n   * Permite establecer los usuarios por defecto\n   * @param JSON usuarios\n   */\n  setUusuariosDefault(usuarios: any) {\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('usuarios', JSON.stringify(usuarios));\n    }\n  }\n  /**\n   * Funcion que permite guardar un usuario\n   * @param void \n   */\n  saveUsuario(usuario: any) {\n    if (this.isLocalStorageAvailable()) {\n      let currentUsuarios = this.getUsuarios();\n      if (!Array.isArray(currentUsuarios)) {\n        currentUsuarios = [];\n      }\n      currentUsuarios.push(usuario);\n      localStorage.setItem('usuarios', JSON.stringify(currentUsuarios));\n    } else {\n      console.error(\"LocalStorage no está disponible.\");\n    }\n  }\n  /**\n   * Funcion que obtiene los usuarios\n   * @returns {JSON}\n   */\n  getUsuarios() {\n    if (this.isLocalStorageAvailable() && localStorage.getItem('usuarios')) {\n      return JSON.parse(localStorage.getItem('usuarios') || '[]');\n    }\n    return this.usuarios;\n  }\n  /**\n   * Funcion que permite actualizar un usuario\n   * @param {JSON} updatedUser\n   * @returns {void}\n   * */\n  updateUser(updatedUser: any) {\n    if (this.isLocalStorageAvailable()) {\n      let currentUsuarios = this.getUsuarios();\n      if (!Array.isArray(currentUsuarios)) {\n        currentUsuarios = [];\n      }\n      const index = currentUsuarios.findIndex((item: any) => item.username === updatedUser.username);\n      \n      if (index !== -1) {\n        currentUsuarios[index] = { ...currentUsuarios[index], ...updatedUser };\n        localStorage.setItem('usuarios', JSON.stringify(currentUsuarios));\n        console.log(`Elemento con ID ${updatedUser.username} actualizado.`);\n        this.logout();\n        this.router.navigate(['/login']);\n        console.log(\"logout\");\n      } else {\n        console.log(`Elemento con ID ${updatedUser.username} no encontrado.`);\n      }\n    } else {\n      console.log(\"LocalStorage no está disponible.\");\n    }\n  }\n\n\n\n\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InventarioComponent.html":{"url":"components/InventarioComponent.html","title":"component - InventarioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InventarioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inventario/inventario.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente Inventario\nEste componente se encarga de mostrar el inventario del taller\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-inventario\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./inventario.component.html\n            \n\n\n\n            \n                styleUrl\n                ./inventario.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                inventario\n                            \n                            \n                                nuevoProducto\n                            \n                            \n                                user_role\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buttonAdd\n                            \n                            \n                                buttonBorrar\n                            \n                            \n                                buttonEdit\n                            \n                            \n                                buttonUtilizar\n                            \n                            \n                                navigateToNuevo\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                obtenerInventario\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(inventarioService: InventarioService, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/inventario/inventario.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inventarioService\n                                                  \n                                                        \n                                                                        InventarioService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonAdd\n                        \n                    \n                \n            \n            \n                \nbuttonAdd()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario/inventario.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Función que agrega un item al inventario\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonBorrar\n                        \n                    \n                \n            \n            \n                \nbuttonBorrar(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario/inventario.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Función que borra un item del inventario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Función que borra un item del inventario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonEdit\n                        \n                    \n                \n            \n            \n                \nbuttonEdit(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario/inventario.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Función que redirige a la página para editar un item del inventario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                Función que redirige a la página para editar un item del inventario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonUtilizar\n                        \n                    \n                \n            \n            \n                \nbuttonUtilizar(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario/inventario.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Función que redirige a la página para utilizar un item del inventario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Función que redirige a la página para utilizar un item del inventario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToNuevo\n                        \n                    \n                \n            \n            \n                \nnavigateToNuevo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario/inventario.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Función que redirige a la página para agregar un nuevo item al inventario\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario/inventario.component.ts:58\n                        \n                    \n\n\n            \n                \n                        funcion que se ejecuta al iniciar el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        obtenerInventario\n                        \n                    \n                \n            \n            \n                \nobtenerInventario()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario/inventario.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Función que obtiene el inventario del taller\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        inventario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventario/inventario.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nuevoProducto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    name: \"Líquido refrigerante\",\n    category: \"Insumos\",\n    quantity: 25,\n    price: \"8000\",\n    description: \"Marca CoolMax\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/inventario/inventario.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventario/inventario.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InventarioService } from '../inventario.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n/**\n * @description\n * Componente Inventario\n * Este componente se encarga de mostrar el inventario del taller\n * \n */\n\n@Component({\n  selector: 'app-inventario',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './inventario.component.html',\n  styleUrl: './inventario.component.css'\n})\n\nexport class InventarioComponent implements OnInit {\n\n\n  /**\n   * @param {number} id \n   * Función que redirige a la página para utilizar un item del inventario\n   * \n   */\n  buttonUtilizar(id: number) {\n    this.router.navigate(['/inventario/utilizar', id]);\n  }\n\n\n  constructor(private inventarioService: InventarioService, private router: Router, private authService: AuthService) {\n\n  }\n  inventario: any;\n  user_role: any;\n  \n  /**\n   * @param {number} id \n   * @returns {void}\n   * Función que redirige a la página para editar un item del inventario\n   * \n   */\n\n  buttonEdit(id: number) {\n    //redirigir a inventario/id\n    this.router.navigate(['/inventario', id]);\n    \n  }\n\n  /**\n   * funcion que se ejecuta al iniciar el componente\n   * @returns {void}\n   */\n  ngOnInit() {\n    this.inventarioService.inventario$.subscribe({\n      next: (data) => {\n        console.log(data)\n        this.inventario = data;\n      },\n      error: (error) => {\n        console.error('Error al obtener el inventario', error);\n      },\n      complete: () => {\n        console.log('Suscripción completada');\n      }\n    });\n\n    this.user_role = this.authService.getUserRole();\n    console.log(this.user_role);\n  }\n  /**\n   * Función que obtiene el inventario del taller\n   * @returns {void}\n   */\n  obtenerInventario() {\n    this.inventario = this.inventarioService.getInventario();\n    console.log(this.inventario);\n  }\n\n  nuevoProducto = {\n    name: \"Líquido refrigerante\",\n    category: \"Insumos\",\n    quantity: 25,\n    price: \"8000\",\n    description: \"Marca CoolMax\"\n  };\n  \n  /**\n   * Función que agrega un item al inventario\n   * @returns {void}\n   */\n  buttonAdd() {\n    this.inventarioService.addItemToInventario(this.nuevoProducto);\n\n  }\n\n  /**\n   * \n   * @param id \n   * Función que borra un item del inventario\n   * @returns {void}\n   */\n  buttonBorrar(id: number) {\n    if(confirm(\"¿Estás seguro de que deseas eliminar este item?\")) {\n      this.inventarioService.deleteItemFromInventario(id);\n      console.log('borrar' + id);\n    }\n    \n  }\n  /**\n   * Función que redirige a la página para agregar un nuevo item al inventario\n   * @returns {void}\n   */\n  navigateToNuevo() {\n    this.router.navigate(['/inventario/nuevo']);\n  }\n\n  \n}\n\n    \n\n    \n        \n    \n  \n        \n            \n              Inventario\n              Listado de repuestos e insumos\n            \n            \n                 \n                \n                     Agregar Nuevo\n                \n            \n           \n          \n\n    \n        \n        \n            \n                #\n                Nombre\n                Categoría\n                Cantidad\n                Precio\n                Descripción\n                Acciones\n                    \n        \n        \n            \n                {{item.id}}\n                {{item.name}}\n                {{item.category}}\n                {{item.quantity}}\n                {{item.price}}\n                {{item.description}}\n                \n                    \n                        \n                            \n                        \n                        \n                           \n                            \n                                \n                            \n                            \n                                \n                            \n                        \n\n                    \n                \n            \n        \n    \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Inventario              Listado de repuestos e insumos                                                                              Agregar Nuevo                                                                                                 #                Nombre                Categoría                Cantidad                Precio                Descripción                Acciones                                                                {{item.id}}                {{item.name}}                {{item.category}}                {{item.quantity}}                {{item.price}}                {{item.description}}                                                                                                                                                                                                                                                                                                                                                                                                                                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InventarioComponent', 'selector': 'app-inventario'},{'name': 'InventarioEditarComponent', 'selector': 'app-inventario-editar'},{'name': 'InventarioNuevoComponent', 'selector': 'app-inventario-nuevo'},{'name': 'InventarioUtilizarComponent', 'selector': 'app-inventario-utilizar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginRegistroComponent', 'selector': 'app-login-registro'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InventarioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InventarioEditarComponent.html":{"url":"components/InventarioEditarComponent.html","title":"component - InventarioEditarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InventarioEditarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inventario-editar/inventario-editar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-inventario-editar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./inventario-editar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./inventario-editar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                producto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, inventarioService: InventarioService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/inventario-editar/inventario-editar.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inventarioService\n                                                  \n                                                        \n                                                                        InventarioService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario-editar/inventario-editar.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Función que se ejecuta al iniciar el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario-editar/inventario-editar.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Función que se ejecuta al enviar el formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventario-editar/inventario-editar.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        producto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InventarioItem\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventario-editar/inventario-editar.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormsModule, NgForm } from '@angular/forms'; \nimport { CommonModule } from '@angular/common';\nimport { InventarioService } from '../inventario.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n/**\n * @description\n * Componente para editar un producto del inventario.\n */\n\n\n\ninterface InventarioItem {\n  id: number;\n  name: string;\n  category: string;\n  quantity: number;\n  price: string;\n  description: string;\n}\n\n\n\n@Component({\n  selector: 'app-inventario-editar',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './inventario-editar.component.html',\n  styleUrl: './inventario-editar.component.css'\n})\nexport class InventarioEditarComponent implements OnInit {\n  \n\n\n  constructor(\n    private route: ActivatedRoute,\n    private inventarioService: InventarioService,\n    private router: Router\n  ) {}\n\n  id!: number;\n  producto!: InventarioItem;\n  /**\n   * Función que se ejecuta al iniciar el componente\n   * @returns {void}\n   */\n  ngOnInit(): void {\n    const idParam = this.route.snapshot.paramMap.get('id');\n    if (idParam) {\n      this.inventarioService.getItemById(idParam).subscribe({\n        next: (data: InventarioItem | undefined) => {\n          if (data) {\n            this.producto = data;\n            //No funciona \n            //this.producto.category = data.category;\n            //Si funciona\n            //this.producto.category = 'Insumo';\n            //console.log('Producto cargado:', data.category);\n          } else {\n            console.error('Producto no encontrado.');\n            this.router.navigate(['/inventario']);\n          }\n        },\n        error: (error: any) => {\n          console.error('Error al cargar el producto:', error);\n          this.router.navigate(['/inventario']);\n        }\n      });\n    } else {\n      console.error('ID inválido en la URL.');\n      this.router.navigate(['/inventario']);\n    }\n  }\n  /**\n   * Función que se ejecuta al enviar el formulario\n   * @returns {void}\n   */\n  onSubmit() {\n    if (this.producto) {\n      this.inventarioService.updateItem(this.producto);\n      console.log('Producto actualizado:', this.id);\n      this.router.navigate(['/inventario']);\n    } else {\n      console.error('Producto no encontrado.');\n      this.router.navigate(['/inventario']);\n    }\n  }\n  \n\n}\n\n    \n\n    \n        \n    \n      \n        \n          Inventario\n          Crear nuevo ítem\n          \n            \n              Nombre\n              \n              \n                El nombre es obligatorio.\n                El nombre no puede tener más de 50 caracteres.\n              \n            \n            \n              Categoría\n                \n                Insumo\n                Repuesto\n                \n              \n                La categoría es obligatoria.\n              \n            \n            \n              Cantidad\n              \n              \n                La cantidad es obligatoria.\n                La cantidad debe ser mayor o igual a 1.\n              \n            \n            \n              Precio\n              \n              \n                El precio es obligatorio.\n                El precio debe ser un número válido.\n              \n            \n            \n              Descripción\n              \n              \n                La descripción es obligatoria.\n                La descripción no puede tener más de 15 caracteres.\n              \n            \n            \n              Guardar\n            \n          \n        \n      \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Inventario          Crear nuevo ítem                                    Nombre                                            El nombre es obligatorio.                El nombre no puede tener más de 50 caracteres.                                                    Categoría                                Insumo                Repuesto                                              La categoría es obligatoria.                                                    Cantidad                                            La cantidad es obligatoria.                La cantidad debe ser mayor o igual a 1.                                                    Precio                                            El precio es obligatorio.                El precio debe ser un número válido.                                                    Descripción                                            La descripción es obligatoria.                La descripción no puede tener más de 15 caracteres.                                                    Guardar                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InventarioComponent', 'selector': 'app-inventario'},{'name': 'InventarioEditarComponent', 'selector': 'app-inventario-editar'},{'name': 'InventarioNuevoComponent', 'selector': 'app-inventario-nuevo'},{'name': 'InventarioUtilizarComponent', 'selector': 'app-inventario-utilizar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginRegistroComponent', 'selector': 'app-login-registro'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InventarioEditarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InventarioItem.html":{"url":"interfaces/InventarioItem.html","title":"interface - InventarioItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InventarioItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/inventario-editar/inventario-editar.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Componente para editar un producto del inventario.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormsModule, NgForm } from '@angular/forms'; \nimport { CommonModule } from '@angular/common';\nimport { InventarioService } from '../inventario.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n/**\n * @description\n * Componente para editar un producto del inventario.\n */\n\n\n\ninterface InventarioItem {\n  id: number;\n  name: string;\n  category: string;\n  quantity: number;\n  price: string;\n  description: string;\n}\n\n\n\n@Component({\n  selector: 'app-inventario-editar',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './inventario-editar.component.html',\n  styleUrl: './inventario-editar.component.css'\n})\nexport class InventarioEditarComponent implements OnInit {\n  \n\n\n  constructor(\n    private route: ActivatedRoute,\n    private inventarioService: InventarioService,\n    private router: Router\n  ) {}\n\n  id!: number;\n  producto!: InventarioItem;\n  /**\n   * Función que se ejecuta al iniciar el componente\n   * @returns {void}\n   */\n  ngOnInit(): void {\n    const idParam = this.route.snapshot.paramMap.get('id');\n    if (idParam) {\n      this.inventarioService.getItemById(idParam).subscribe({\n        next: (data: InventarioItem | undefined) => {\n          if (data) {\n            this.producto = data;\n            //No funciona \n            //this.producto.category = data.category;\n            //Si funciona\n            //this.producto.category = 'Insumo';\n            //console.log('Producto cargado:', data.category);\n          } else {\n            console.error('Producto no encontrado.');\n            this.router.navigate(['/inventario']);\n          }\n        },\n        error: (error: any) => {\n          console.error('Error al cargar el producto:', error);\n          this.router.navigate(['/inventario']);\n        }\n      });\n    } else {\n      console.error('ID inválido en la URL.');\n      this.router.navigate(['/inventario']);\n    }\n  }\n  /**\n   * Función que se ejecuta al enviar el formulario\n   * @returns {void}\n   */\n  onSubmit() {\n    if (this.producto) {\n      this.inventarioService.updateItem(this.producto);\n      console.log('Producto actualizado:', this.id);\n      this.router.navigate(['/inventario']);\n    } else {\n      console.error('Producto no encontrado.');\n      this.router.navigate(['/inventario']);\n    }\n  }\n  \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InventarioItem-1.html":{"url":"interfaces/InventarioItem-1.html","title":"interface - InventarioItem-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InventarioItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/inventario-utilizar/inventario-utilizar.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Componente para restar un producto del inventario.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormsModule, NgForm } from '@angular/forms'; \nimport { CommonModule } from '@angular/common';\nimport { InventarioService } from '../inventario.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n/**\n * @description\n * Componente para restar un producto del inventario.\n */\ninterface InventarioItem {\n  id: number;\n  name: string;\n  category: string;\n  quantity: number;\n  price: string;\n  description: string;\n}\n\n\n@Component({\n  selector: 'app-inventario-utilizar',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './inventario-utilizar.component.html',\n  styleUrl: './inventario-utilizar.component.css'\n})\n\n\nexport class InventarioUtilizarComponent implements OnInit {\n  producto: any;\n  quantity: any;\n  id: any;\n  max_stock: any;\nconstructor(private route: ActivatedRoute, private inventarioService: InventarioService, private router: Router) {} \n\n/** \n* @description\n* Función que se ejecuta al iniciar el componente\n* @returns {void}\n*/\n\nngOnInit(): void {\n  const idParam = this.route.snapshot.paramMap.get('id');\n  if (idParam) {\n    this.inventarioService.getItemById(idParam).subscribe({\n      next: (data: InventarioItem | undefined) => {\n        if (data) {\n          this.producto = data;\n          this.max_stock = this.producto.quantity;\n          console.log('Producto cargado:', data);\n        } else {\n          console.error('Producto no encontrado.');\n          this.router.navigate(['/inventario']);\n        }\n      },\n      error: (error: any) => {\n        console.error('Error al cargar el producto:', error);\n        this.router.navigate(['/inventario']);\n      }\n    });\n  } else {\n    console.error('No se encontró el ID del producto.');\n    this.router.navigate(['/inventario']);\n  }\n\n}\n\n/**\n *  @description\n * Función que se ejecuta al enviar el formulario\n * @returns {void}\n */\nonSubmit() {\n  console.log('Cantidad a utilizar:', this.producto.quantity);\n  this.inventarioService.updateItemQuantity(this.producto.id, this.producto.quantity);\n    alert('Stock Actualizado');\n    if (this.router) {\n      this.router.navigate(['/inventario']);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InventarioNuevoComponent.html":{"url":"components/InventarioNuevoComponent.html","title":"component - InventarioNuevoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InventarioNuevoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inventario-nuevo/inventario-nuevo.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para crear un nuevo producto en el inventario.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-inventario-nuevo\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./inventario-nuevo.component.css\n            \n\n\n\n            \n                templateUrl\n                ./inventario-nuevo.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                nuevoProducto\n                            \n                            \n                                price\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(inventarioService: InventarioService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/inventario-nuevo/inventario-nuevo.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inventarioService\n                                                  \n                                                        \n                                                                        InventarioService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario-nuevo/inventario-nuevo.component.ts:36\n                        \n                    \n\n\n            \n                \n                        Función que se ejecuta al iniciar el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario-nuevo/inventario-nuevo.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Función que se ejecuta al enviar el formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/inventario-nuevo/inventario-nuevo.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/inventario-nuevo/inventario-nuevo.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/inventario-nuevo/inventario-nuevo.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nuevoProducto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventario-nuevo/inventario-nuevo.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/inventario-nuevo/inventario-nuevo.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/inventario-nuevo/inventario-nuevo.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms'; \nimport { CommonModule } from '@angular/common';\nimport { InventarioService } from '../inventario.service';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente para crear un nuevo producto en el inventario.\n * \n */\n@Component({\n  selector: 'app-inventario-nuevo',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  templateUrl: './inventario-nuevo.component.html',\n  styleUrls: ['./inventario-nuevo.component.css'] // Cambiado a styleUrls\n})\n\nexport class InventarioNuevoComponent implements OnInit {\n  name: string = '';\n  category: string = '';\n  quantity: number | null = null;\n  price: number | null = null;\n  description: string = '';\n  nuevoProducto: any;\n\n  constructor(private inventarioService: InventarioService,private router: Router ) { }\n  /**\n   * Función que se ejecuta al iniciar el componente\n   * @returns {void}\n   */\n  ngOnInit(): void {\n    console.log('Componente InventarioNuevoComponent inicializado.');\n  }\n  /**\n   * Función que se ejecuta al enviar el formulario\n   * @returns {void}\n   */\n  onSubmit() {\n    if (this.name && this.category && this.quantity && this.price && this.description) {\n      this.nuevoProducto = {\n        name: this.name,\n        category: this.category,\n        quantity: this.quantity,\n        price: this.price,\n        description: this.description\n      };\n      this.inventarioService.addItemToInventario(this.nuevoProducto);\n      alert('Producto agregado');\n      console.log('Producto agregado:', this.nuevoProducto);\n      this.router.navigate(['/inventario']);\n      \n    } else {\n      console.error('Todos los campos son obligatorios');\n    }\n  }\n}\n\n    \n\n    \n        \n    \n      \n        \n          Inventario\n          Crear nuevo ítem\n          \n            \n              Nombre\n              \n              \n                El nombre es obligatorio.\n                El nombre no puede tener más de 50 caracteres.\n              \n            \n            \n              Categoría\n              \n                Seleccionar categoría\n                Insumo\n                Repuesto\n              \n              \n                La categoría es obligatoria.\n              \n            \n            \n              Cantidad\n              \n              \n                La cantidad es obligatoria.\n                La cantidad debe ser mayor o igual a 1.\n              \n            \n            \n              Precio\n              \n              \n                El precio es obligatorio.\n                El precio debe ser un número válido.\n              \n            \n            \n              Descripción\n              \n              \n                La descripción es obligatoria.\n                La descripción no puede tener más de 15 caracteres.\n              \n            \n            \n              Guardar\n            \n          \n        \n      \n    \n  \n  \n    \n\n    \n                \n                    ./inventario-nuevo.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Inventario          Crear nuevo ítem                                    Nombre                                            El nombre es obligatorio.                El nombre no puede tener más de 50 caracteres.                                                    Categoría                              Seleccionar categoría                Insumo                Repuesto                                            La categoría es obligatoria.                                                    Cantidad                                            La cantidad es obligatoria.                La cantidad debe ser mayor o igual a 1.                                                    Precio                                            El precio es obligatorio.                El precio debe ser un número válido.                                                    Descripción                                            La descripción es obligatoria.                La descripción no puede tener más de 15 caracteres.                                                    Guardar                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InventarioComponent', 'selector': 'app-inventario'},{'name': 'InventarioEditarComponent', 'selector': 'app-inventario-editar'},{'name': 'InventarioNuevoComponent', 'selector': 'app-inventario-nuevo'},{'name': 'InventarioUtilizarComponent', 'selector': 'app-inventario-utilizar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginRegistroComponent', 'selector': 'app-login-registro'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InventarioNuevoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InventarioService.html":{"url":"injectables/InventarioService.html","title":"injectable - InventarioService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InventarioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/inventario.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio que maneja el inventario del taller\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                inventario\n                            \n                            \n                                inventario$\n                            \n                            \n                                    Private\n                                inventarioSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToInventario\n                            \n                            \n                                deleteItemFromInventario\n                            \n                            \n                                getInventario\n                            \n                            \n                                getItemById\n                            \n                            \n                                    Private\n                                isLocalStorageAvailable\n                            \n                            \n                                    Private\n                                loadInventario\n                            \n                            \n                                setInventarioDefault\n                            \n                            \n                                updateItem\n                            \n                            \n                                updateItemQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/inventario.service.ts:47\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToInventario\n                        \n                    \n                \n            \n            \n                \naddItemToInventario(newItem: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario.service.ts:92\n                        \n                    \n\n\n            \n                \n                        Función que agrega un item al inventario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newItem\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteItemFromInventario\n                        \n                    \n                \n            \n            \n                \ndeleteItemFromInventario(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario.service.ts:118\n                        \n                    \n\n\n            \n                \n                        funcion que elimina un item del inventario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInventario\n                        \n                    \n                \n            \n            \n                \ngetInventario()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Función que obtiene el inventario del taller\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItemById\n                        \n                    \n                \n            \n            \n                \ngetItemById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario.service.ts:163\n                        \n                    \n\n\n            \n                \n                        Función que obtiene un item del inventario por ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLocalStorageAvailable\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLocalStorageAvailable()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario.service.ts:180\n                        \n                    \n\n\n            \n                \n                        Función que verifica si localStorage está disponible\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadInventario\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadInventario()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Función que carga el inventario del taller\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setInventarioDefault\n                        \n                    \n                \n            \n            \n                \nsetInventarioDefault(inventario: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Función que establece el inventario por defecto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inventario\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateItem\n                        \n                    \n                \n            \n            \n                \nupdateItem(updatedItem: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario.service.ts:137\n                        \n                    \n\n\n            \n                \n                        Función que actualiza un item del inventario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updatedItem\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateItemQuantity\n                        \n                    \n                \n            \n            \n                \nupdateItemQuantity(id: number, quantity: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario.service.ts:196\n                        \n                    \n\n\n            \n                \n                        Función que actualiza la cantidad de un item del inventario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        inventario\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      id: 1,\n      name: \"Filtro de aceite\",\n      category: \"Repuestos\",\n      quantity: 50,\n      price: \"10000\",\n      description: \"Marca Chanchito feliz\"\n    },\n    {\n      id: 2,\n      name: \"Pastillas de freno\",\n      category: \"Repuestos\",\n      quantity: 30,\n      price: \"20000\",\n      description: \"Marca GTX\"\n    },\n    {\n      id: 3,\n      name: \"Aceite sintético\",\n      category: \"Insumos\",\n      quantity: 100,\n      price: \"15000\",\n      description: \"Castrol Edge 5w30\"\n    },\n    {\n      id: 4,\n      name: \"Paño de tela\",\n      category: \"Insumos\",\n      quantity: 45,\n      price: \"500\",\n      description: \"Marca generica\"\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/inventario.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inventario$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.inventarioSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/inventario.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        inventarioSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/inventario.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, of } from 'rxjs';\n/**\n * @description\n * Servicio que maneja el inventario del taller\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventarioService {\n  private inventarioSubject = new BehaviorSubject([]);\n  inventario$ = this.inventarioSubject.asObservable();\n\n  inventario = [\n    {\n      id: 1,\n      name: \"Filtro de aceite\",\n      category: \"Repuestos\",\n      quantity: 50,\n      price: \"10000\",\n      description: \"Marca Chanchito feliz\"\n    },\n    {\n      id: 2,\n      name: \"Pastillas de freno\",\n      category: \"Repuestos\",\n      quantity: 30,\n      price: \"20000\",\n      description: \"Marca GTX\"\n    },\n    {\n      id: 3,\n      name: \"Aceite sintético\",\n      category: \"Insumos\",\n      quantity: 100,\n      price: \"15000\",\n      description: \"Castrol Edge 5w30\"\n    },\n    {\n      id: 4,\n      name: \"Paño de tela\",\n      category: \"Insumos\",\n      quantity: 45,\n      price: \"500\",\n      description: \"Marca generica\"\n    }\n  ];\n\n  constructor() {\n    if (this.isLocalStorageAvailable() && !localStorage.getItem('inventario')) {\n      this.setInventarioDefault(this.inventario);\n    }\n    this.loadInventario();\n  }\n  /**\n   * Función que carga el inventario del taller\n   * @returns {void}\n   */\n  private loadInventario() {\n    const storedInventario = this.getInventario();\n    this.inventarioSubject.next(storedInventario);\n  }\n\n  /**\n   * Función que obtiene el inventario del taller\n   * @returns {any[]}\n   */\n\n  getInventario() {\n    if (this.isLocalStorageAvailable() && localStorage.getItem('inventario')) {\n      return JSON.parse(localStorage.getItem('inventario') || '[]');\n    }\n    return this.inventario;\n  }\n\n  /**\n   * Función que establece el inventario por defecto\n   * @param {any} inventario\n   * @returns {void}\n   */\n  setInventarioDefault(inventario: any) {\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('inventario', JSON.stringify(inventario));\n    }\n  }\n\n  /**\n   * Función que agrega un item al inventario\n   * @param newItem \n   * @returns {void}\n   */\n  addItemToInventario(newItem: any) {\n    if (this.isLocalStorageAvailable()) {\n      let currentInventario = this.getInventario();\n      if (!Array.isArray(currentInventario)) {\n        currentInventario = [];\n      }\n  \n      let newId = 1;\n      if (currentInventario.length > 0) {\n        const lastItem = currentInventario[currentInventario.length - 1];\n        newId = lastItem.id + 1;\n      }\n  \n      newItem.id = newId;\n      currentInventario.push(newItem);\n      localStorage.setItem('inventario', JSON.stringify(currentInventario));\n      this.inventarioSubject.next(currentInventario);\n    } else {\n      console.error(\"LocalStorage no está disponible.\");\n    }\n  }\n  /**\n   * funcion que elimina un item del inventario\n   * @param id \n   * @returns {void}\n   */\n  deleteItemFromInventario(id: number) {\n    if (this.isLocalStorageAvailable()) {\n      let currentInventario = this.getInventario();\n      if (!Array.isArray(currentInventario)) {\n        currentInventario = [];\n      }\n      currentInventario = currentInventario.filter((item: any) => item.id !== id);\n      localStorage.setItem('inventario', JSON.stringify(currentInventario));\n      this.loadInventario();\n    } else {\n      console.error(\"LocalStorage no está disponible.\");\n    }\n  }\n  /**\n   * Función que actualiza un item del inventario\n   * @param updatedItem \n   * @returns {void}\n   */\n\n  updateItem(updatedItem: any) {\n    if (this.isLocalStorageAvailable()) {\n      let currentInventario = this.getInventario();\n      if (!Array.isArray(currentInventario)) {\n        currentInventario = [];\n      }\n\n      const index = currentInventario.findIndex((item: any) => item.id === updatedItem.id);\n      \n\n      if (index !== -1) {\n        currentInventario[index] = { ...currentInventario[index], ...updatedItem };\n        localStorage.setItem('inventario', JSON.stringify(currentInventario));\n        this.inventarioSubject.next(currentInventario);\n      } else {\n        console.error(`Elemento con ID ${updatedItem.id} no encontrado.`);\n      }\n    } else {\n      console.error(\"LocalStorage no está disponible.\");\n    }\n  }\n  /**\n   * Función que obtiene un item del inventario por ID\n   * @param id \n   * @returns {any}\n   */\n  getItemById(id: string) {\n    interface InventarioItem {\n      id: number;\n      name: string;\n      category: string;\n      quantity: number;\n      price: string;\n      description: string;\n    }\n    const currentInventario: InventarioItem[] = this.getInventario();\n    const itemEncontrado = currentInventario.find((item: InventarioItem) => item.id === Number(id));\n    return of(itemEncontrado)\n  }\n  /**\n   * Función que verifica si localStorage está disponible\n   * @returns {boolean}\n   */\n  private isLocalStorageAvailable(): boolean {\n    try {\n      const testKey = '__test__';\n      localStorage.setItem(testKey, 'test');\n      localStorage.removeItem(testKey);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  /**\n   * Función que actualiza la cantidad de un item del inventario\n   * @param id \n   * @param quantity \n   * @returns {void}\n   */\n  updateItemQuantity(id: number, quantity: number) {\n    if (this.isLocalStorageAvailable()) {\n      let currentInventario = this.getInventario();\n      if (!Array.isArray(currentInventario)) {\n        currentInventario = [];\n      }\n\n      const index = currentInventario.findIndex((item: any) => item.id === id);\n      \n      if (index !== -1) {\n        currentInventario[index].quantity = quantity;\n        localStorage.setItem('inventario', JSON.stringify(currentInventario));\n        this.inventarioSubject.next(currentInventario);\n      } else {\n        console.error(`Elemento con ID ${id} no encontrado.`);\n      }\n    } else {\n      console.error(\"LocalStorage no está disponible.\");\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InventarioUtilizarComponent.html":{"url":"components/InventarioUtilizarComponent.html","title":"component - InventarioUtilizarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InventarioUtilizarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inventario-utilizar/inventario-utilizar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-inventario-utilizar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./inventario-utilizar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./inventario-utilizar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                max_stock\n                            \n                            \n                                producto\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, inventarioService: InventarioService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/inventario-utilizar/inventario-utilizar.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inventarioService\n                                                  \n                                                        \n                                                                        InventarioService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario-utilizar/inventario-utilizar.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Función que se ejecuta al iniciar el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inventario-utilizar/inventario-utilizar.component.ts:74\n                        \n                    \n\n\n            \n                \n                         @description\nFunción que se ejecuta al enviar el formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventario-utilizar/inventario-utilizar.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        max_stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventario-utilizar/inventario-utilizar.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        producto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventario-utilizar/inventario-utilizar.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventario-utilizar/inventario-utilizar.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormsModule, NgForm } from '@angular/forms'; \nimport { CommonModule } from '@angular/common';\nimport { InventarioService } from '../inventario.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n/**\n * @description\n * Componente para restar un producto del inventario.\n */\ninterface InventarioItem {\n  id: number;\n  name: string;\n  category: string;\n  quantity: number;\n  price: string;\n  description: string;\n}\n\n\n@Component({\n  selector: 'app-inventario-utilizar',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './inventario-utilizar.component.html',\n  styleUrl: './inventario-utilizar.component.css'\n})\n\n\nexport class InventarioUtilizarComponent implements OnInit {\n  producto: any;\n  quantity: any;\n  id: any;\n  max_stock: any;\nconstructor(private route: ActivatedRoute, private inventarioService: InventarioService, private router: Router) {} \n\n/** \n* @description\n* Función que se ejecuta al iniciar el componente\n* @returns {void}\n*/\n\nngOnInit(): void {\n  const idParam = this.route.snapshot.paramMap.get('id');\n  if (idParam) {\n    this.inventarioService.getItemById(idParam).subscribe({\n      next: (data: InventarioItem | undefined) => {\n        if (data) {\n          this.producto = data;\n          this.max_stock = this.producto.quantity;\n          console.log('Producto cargado:', data);\n        } else {\n          console.error('Producto no encontrado.');\n          this.router.navigate(['/inventario']);\n        }\n      },\n      error: (error: any) => {\n        console.error('Error al cargar el producto:', error);\n        this.router.navigate(['/inventario']);\n      }\n    });\n  } else {\n    console.error('No se encontró el ID del producto.');\n    this.router.navigate(['/inventario']);\n  }\n\n}\n\n/**\n *  @description\n * Función que se ejecuta al enviar el formulario\n * @returns {void}\n */\nonSubmit() {\n  console.log('Cantidad a utilizar:', this.producto.quantity);\n  this.inventarioService.updateItemQuantity(this.producto.id, this.producto.quantity);\n    alert('Stock Actualizado');\n    if (this.router) {\n      this.router.navigate(['/inventario']);\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          Inventario\n          Descontar de stock\n          \n            \n              Nombre\n              \n              \n                El nombre es obligatorio.\n                El nombre no puede tener más de 15 caracteres.\n              \n            \n            \n          \n            \n              Cantidad\n              \n              \n                La cantidad es obligatoria.\n                La cantidad debe ser mayor o igual a 1.\n                La cantidad debe ser mayor o igual a {{max_stock}}.\n              \n            \n          \n\n\n            \n              Actualizar Stock\n            \n          \n        \n      \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Inventario          Descontar de stock                                    Nombre                                            El nombre es obligatorio.                El nombre no puede tener más de 15 caracteres.                                                                          Cantidad                                            La cantidad es obligatoria.                La cantidad debe ser mayor o igual a 1.                La cantidad debe ser mayor o igual a {{max_stock}}.                                                              Actualizar Stock                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InventarioComponent', 'selector': 'app-inventario'},{'name': 'InventarioEditarComponent', 'selector': 'app-inventario-editar'},{'name': 'InventarioNuevoComponent', 'selector': 'app-inventario-nuevo'},{'name': 'InventarioUtilizarComponent', 'selector': 'app-inventario-utilizar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginRegistroComponent', 'selector': 'app-login-registro'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InventarioUtilizarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que permite el inicio de sesión de un usuario\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formularioControls\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Funcion que se ejecuta al iniciar el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Funcion que se ejecuta al enviar el formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formularioControls\n                    \n                \n\n                \n                    \n                        getformularioControls()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:69\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component,  } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { FormsModule } from '@angular/forms'; \nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, Validators, FormGroup,FormBuilder} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n/**\n * @description\n * Componente que permite el inicio de sesión de un usuario\n */\n\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [ReactiveFormsModule,CommonModule, RouterModule],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css'\n})\nexport class LoginComponent {\n  username: string = '';\n  password: string = '';\n  role: any;\n  loginForm: FormGroup;\n  constructor(private authService: AuthService, private router: Router, private fb: FormBuilder) {\n    this.loginForm = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(3)]],\n      password: ['', [Validators.required, Validators.minLength(1)]],\n    });\n  }\n\n  /**\n   * Funcion que se ejecuta al iniciar el componente\n   * @returns {void}\n   */\n\n  ngOnInit(): void {\n    if (this.authService.isAuthenticated()) {\n      this.router.navigate(['/inventario']);\n    }\n  }\n /**\n   * Funcion que se ejecuta al enviar el formulario\n   * @returns {void}\n   */\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      console.log(this.loginForm.get('username')?.value);\n      if (this.authService.login(this.loginForm.get('username')?.value, this.loginForm.get('password')?.value)) {\n        const role = this.authService.getUserRole();\n        if (role === 'admin') {\n          this.router.navigate(['/inventario']);\n        } else if (role === 'mec') {\n          this.router.navigate(['/inventario']);\n        }\n        this.role = this.authService.getUserRole();\n        \n      } else {\n        alert('Credenciales incorrectas');\n      }\n    } else {\n      console.log('Todos los campos son obligatorios');\n    }\n    \n  }\n\n  get formularioControls() {\n    return this.loginForm.controls;\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            \n              Acceder\n              Ingresar al sistema de inventario\n              \n                \n                  Nombre de usuario\n                  \n                  \n                    El nombre de usuario es requerido.\n                    \n                      El nombre de usuario debe tener al menos 3 caracteres.\n                    \n                  \n                \n                \n                  Contraseña\n                  \n                  \n                    La contraseña es requerida.\n                    \n                      La contraseña debe tener al menos 6 caracteres.\n                    \n                  \n                \n  \n                \n                  \n                    Iniciar Sesión\n                  \n                \n                \n                  Registrarse\n                \n              \n            \n          \n        \n      \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      Acceder              Ingresar al sistema de inventario                                                Nombre de usuario                                                        El nombre de usuario es requerido.                                          El nombre de usuario debe tener al menos 3 caracteres.                                                                                        Contraseña                                                        La contraseña es requerida.                                          La contraseña debe tener al menos 6 caracteres.                                                                                                              Iniciar Sesión                                                                    Registrarse                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InventarioComponent', 'selector': 'app-inventario'},{'name': 'InventarioEditarComponent', 'selector': 'app-inventario-editar'},{'name': 'InventarioNuevoComponent', 'selector': 'app-inventario-nuevo'},{'name': 'InventarioUtilizarComponent', 'selector': 'app-inventario-utilizar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginRegistroComponent', 'selector': 'app-login-registro'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginRegistroComponent.html":{"url":"components/LoginRegistroComponent.html","title":"component - LoginRegistroComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginRegistroComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-registro/login-registro.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para el registro de usuarios\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-registro\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login-registro.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login-registro.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confpassword\n                            \n                            \n                                correo\n                            \n                            \n                                nombre\n                            \n                            \n                                password\n                            \n                            \n                                perfil\n                            \n                            \n                                registerForm\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                passwordMatchValidator\n                            \n                            \n                                registrarse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-registro/login-registro.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(form: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-registro/login-registro.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Funcion verifica si las contraseñas coinciden\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { passwordMismatch: boolean; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrarse\n                        \n                    \n                \n            \n            \n                \nregistrarse()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-registro/login-registro.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Funcion que se ejecuta al enviar el formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confpassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-registro/login-registro.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        correo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-registro/login-registro.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-registro/login-registro.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-registro/login-registro.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        perfil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-registro/login-registro.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-registro/login-registro.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-registro/login-registro.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; \nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n/**\n * @description\n * Componente para el registro de usuarios\n */\n\n@Component({\n  selector: 'app-login-registro',\n  standalone: true,\n  imports: [ReactiveFormsModule,CommonModule],\n  templateUrl: './login-registro.component.html',\n  styleUrl: './login-registro.component.css'\n})\nexport class LoginRegistroComponent {\n  perfil: any;\n  nombre: string = '';\n  correo: any;\n  password: any;\n  confpassword: any;\n  username: any;  \n  registerForm: FormGroup;\n  constructor(private authService: AuthService, private router: Router,private fb: FormBuilder) {\n    this.registerForm = this.fb.group(\n      {\n        username: ['', [Validators.required, Validators.maxLength(15)]],\n        correo: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required]],\n        confirmPassword: ['', [Validators.required]]\n      },\n      { validators: this.passwordMatchValidator }\n    );\n  }\n\n  /**\n   * Funcion verifica si las contraseñas coinciden\n   * @returns {void}\n   * */\n  passwordMatchValidator(form: FormGroup) {\n    const password = form.get('password')?.value;\n    const confirmPassword = form.get('confirmPassword')?.value;\n    return password === confirmPassword ? null : { passwordMismatch: true };\n  }\n\n\n  /**\n   * Funcion que se ejecuta al enviar el formulario\n   * @returns {void}\n   */\n  registrarse() {\n    if (this.registerForm.valid) {\n      let newUsuario = {\n        username: this.username,\n        correo: this.correo,\n        password: this.password\n      }; \n      this.authService.saveUsuario(newUsuario);\n      this.router.navigate(['/login']);\n      alert('Usuario registrado');\n    } else {\n      alert('Las contraseñas no coinciden');\n  }\n}\n \n\n}\n\n    \n\n    \n        \n    \n      \n        \n          Registrarse\n          Create una cuenta\n          \n            \n              Nombre de usuario\n              \n              \n                El nombre de usuario es obligatorio.\n                El nombre de usuario no puede tener más de 15 caracteres.\n              \n            \n  \n            \n              Correo\n              \n              \n                El correo es obligatorio.\n                Debe ingresar un correo válido.\n              \n            \n  \n            \n              Contraseña\n              \n              \n                La contraseña es obligatoria.\n              \n            \n  \n            \n              Confirmar Contraseña\n              \n              \n                Debe confirmar la contraseña.\n                Las contraseñas no coinciden.\n              \n            \n  \n            \n              Guardar\n            \n          \n        \n      \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Registrarse          Create una cuenta                                    Nombre de usuario                                            El nombre de usuario es obligatorio.                El nombre de usuario no puede tener más de 15 caracteres.                                                      Correo                                            El correo es obligatorio.                Debe ingresar un correo válido.                                                      Contraseña                                            La contraseña es obligatoria.                                                      Confirmar Contraseña                                            Debe confirmar la contraseña.                Las contraseñas no coinciden.                                                      Guardar                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InventarioComponent', 'selector': 'app-inventario'},{'name': 'InventarioEditarComponent', 'selector': 'app-inventario-editar'},{'name': 'InventarioNuevoComponent', 'selector': 'app-inventario-nuevo'},{'name': 'InventarioUtilizarComponent', 'selector': 'app-inventario-utilizar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginRegistroComponent', 'selector': 'app-login-registro'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginRegistroComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para la barra de navegación\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                role\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Funcion que se ejecuta al cerrar sesión\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Funcion que se ejecuta al iniciar el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport {CommonModule} from '@angular/common';\n\n/**\n * @description\n * Componente para la barra de navegación\n */\n\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [RouterModule, CommonModule],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent {\n\n  constructor(private authService: AuthService, private router: Router) {\n  }\n  role: any;\n\n  /**\n   * Funcion que se ejecuta al iniciar el componente\n   * @returns {void}\n   */\n\n  ngOnInit() {\n    if (this.authService.getUserRole()) {\n      this.role = this.authService.getUserRole();\n    }\n\n  }\n  /**\n   * Funcion que se ejecuta al cerrar sesión\n   * @returns {void}\n   */\n  logout() {\n    this.authService.logout();\n    this.role = this.authService.getUserRole();\n    this.router.navigate(['/login']);\n    console.log(\"logout\");\n  }\n\n\n}\n\n    \n\n    \n        \n\n\n    \n      Taller Mecánico\n       \n        {{ role }}\n      \n        \n      \n      \n        \n          \n            Inventario\n          \n          \n            Mi Perfil\n          \n          \n            Salir\n          \n        \n      \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Taller Mecánico               {{ role }}                                                        Inventario                                Mi Perfil                                Salir                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InventarioComponent', 'selector': 'app-inventario'},{'name': 'InventarioEditarComponent', 'selector': 'app-inventario-editar'},{'name': 'InventarioNuevoComponent', 'selector': 'app-inventario-nuevo'},{'name': 'InventarioUtilizarComponent', 'selector': 'app-inventario-utilizar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginRegistroComponent', 'selector': 'app-login-registro'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PerfilComponent.html":{"url":"components/PerfilComponent.html","title":"component - PerfilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PerfilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/perfil/perfil.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para el perfil de usuario\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-perfil\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./perfil.component.html\n            \n\n\n\n            \n                styleUrl\n                ./perfil.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confpassword\n                            \n                            \n                                correo\n                            \n                            \n                                data_user\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updatePerfil\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/perfil/perfil.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/perfil/perfil.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Funcion que se ejecuta al iniciar el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePerfil\n                        \n                    \n                \n            \n            \n                \nupdatePerfil()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/perfil/perfil.component.ts:25\n                        \n                    \n\n\n            \n                \n                        Funcion que se ejecuta al enviar el formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confpassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/perfil/perfil.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        correo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/perfil/perfil.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/perfil/perfil.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/perfil/perfil.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/perfil/perfil.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms'; \nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n/**\n * @description\n * Componente para el perfil de usuario\n */\n\n@Component({\n  selector: 'app-perfil',\n  standalone: true,\n  imports: [FormsModule,CommonModule ],\n  templateUrl: './perfil.component.html',\n  styleUrl: './perfil.component.css'\n})\n\nexport class PerfilComponent implements OnInit {\n  /**\n   * Funcion que se ejecuta al enviar el formulario\n   * @returns {void}\n   */\n  updatePerfil() {\n    if (this.password === this.confpassword) {\n      let updatedUser = {\n        username: this.username,\n        correo: this.correo,\n        password: this.password\n      }; \n      this.authService.updateUser(updatedUser);\n      alert('Perfil actualizado');\n      //this.router.navigate(['/login']);\n    } else {\n      alert('Las contraseñas no coinciden');\n    }\n  }\n  data_user: any;\n  username: string = '';\n  correo: string = '';\n  confpassword: any;\n  password: any;\n  constructor(private authService: AuthService, private router: Router) {}\n  /**\n   * Funcion que se ejecuta al iniciar el componente\n   * @returns {void}\n   */\n  ngOnInit(): void {\n    if (!this.authService.isAuthenticated()) {\n      this.router.navigate(['/login']);\n    }else{\n      this.data_user = this.authService.getLoggedUser();\n      this.username = this.data_user.username;\n      this.correo = this.data_user.correo;\n      console.log(this.data_user);\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          Mi Perfil\n          Modifica tu informacion de perfil\n          \n            \n              Nombre de usuario\n              \n              \n                El nombre de usuario es obligatorio.\n                El nombre de usuario no puede tener más de 15 caracteres.\n              \n            \n           \n            \n                Correo\n                \n                \n                  El correo es obligatorio.\n                  El correo no puede tener más de 50 caracteres.\n                \n              \n\n                \n                    Contraseña\n                    \n                    \n                    La contraseña es obligatoria.\n                    \n                \n\n                \n                    Confirmar Contraseña\n                    \n                    \n                    La contraseña es obligatoria.\n                    \n                \n\n\n           \n            \n              Guardar\n            \n          \n        \n      \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Mi Perfil          Modifica tu informacion de perfil                                    Nombre de usuario                                            El nombre de usuario es obligatorio.                El nombre de usuario no puede tener más de 15 caracteres.                                                                 Correo                                                  El correo es obligatorio.                  El correo no puede tener más de 50 caracteres.                                                                  Contraseña                                                            La contraseña es obligatoria.                                                                        Confirmar Contraseña                                                            La contraseña es obligatoria.                                                                         Guardar                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InventarioComponent', 'selector': 'app-inventario'},{'name': 'InventarioEditarComponent', 'selector': 'app-inventario-editar'},{'name': 'InventarioNuevoComponent', 'selector': 'app-inventario-nuevo'},{'name': 'InventarioUtilizarComponent', 'selector': 'app-inventario-utilizar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginRegistroComponent', 'selector': 'app-login-registro'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PerfilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        server.ts\n            \n            function\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        server.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth-login.guard.ts\n            \n            guard\n            AuthLoginGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                src/app/inventario-editar/inventario-editar.component.ts\n            \n            component\n            InventarioEditarComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/inventario-editar/inventario-editar.component.ts\n            \n            interface\n            InventarioItem\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/inventario-nuevo/inventario-nuevo.component.ts\n            \n            component\n            InventarioNuevoComponent\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/inventario-utilizar/inventario-utilizar.component.ts\n            \n            component\n            InventarioUtilizarComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/inventario-utilizar/inventario-utilizar.component.ts\n            \n            interface\n            InventarioItem\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/inventario.service.ts\n            \n            injectable\n            InventarioService\n            \n                71 %\n                (10/14)\n            \n        \n        \n            \n                \n                src/app/inventario/inventario.component.ts\n            \n            component\n            InventarioComponent\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                src/app/login-registro/login-registro.component.ts\n            \n            component\n            LoginRegistroComponent\n            \n                27 %\n                (3/11)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/perfil/perfil.component.ts\n            \n            component\n            PerfilComponent\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/platform-server : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @angular/ssr : ^18.2.11\n        \n            @popperjs/core : ^2.11.8\n        \n            bootstrap : ^5.3.3\n        \n            express : ^4.18.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (server.ts)\n                        \n                        \n                            run   (server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n            \n                \napp()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     express.Express\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTallerMecaNg\nThis project was generated with Angular CLI version 18.2.11.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration()]\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
